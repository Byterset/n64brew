{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"UNI",
				"UNIVERSITY_MAP_GRAPH_SIZE\t(university_map_graph.h)"
			],
			[
				"path",
				"pathfinding\tabc"
			],
			[
				"uni",
				"university_map_pathfinding_result\tabc"
			],
			[
				"university",
				"university_map_graph"
			],
			[
				"pa",
				"pathfinding\t(glgoose.cpp)"
			],
			[
				"const",
				"constant\t(character.c)"
			],
			[
				"GL_TE",
				"GL_TEXTURE_2D\tabc"
			],
			[
				"exam",
				"exampleGraph\tabc"
			],
			[
				"debug",
				"debugPathfindingFrom\tabc"
			],
			[
				"debu",
				"debugPathfindingFrom\tabc"
			],
			[
				"den",
				"debugPathfindingTo\tabc"
			],
			[
				"Path",
				"PathfindingState\tabc"
			],
			[
				"resul",
				"resultSize\tabc"
			],
			[
				"Node",
				"NodeState\t(pathfinding.h)"
			],
			[
				"node",
				"nodeStates\tabc"
			],
			[
				"glPush",
				"glPushAttrib\tabc"
			],
			[
				"pos",
				"position\tabc"
			],
			[
				"conn",
				"connectionNode\tabc"
			],
			[
				"res",
				"resultSize\tabc"
			],
			[
				"endNOde",
				"endNodeCost\tabc"
			],
			[
				"Pat",
				"Path_heuristic\tabc"
			],
			[
				"connec",
				"connectionCost\tabc"
			],
			[
				"Un",
				"UnvisitedNodeStateCategory\tabc"
			],
			[
				"Path_",
				"Path_distance\tabc"
			],
			[
				"Path_get",
				"Path_getNodeState\tabc"
			],
			[
				"A",
				"AdjacencyList\tabc"
			],
			[
				"ndoe",
				"nodeID\tabc"
			],
			[
				"ad",
				"adjacencies\tabc"
			],
			[
				"ex",
				"exampleGraph\tabc"
			],
			[
				"min",
				"minCostNode\tabc"
			],
			[
				"es",
				"estimatedTotalCost\tabc"
			],
			[
				"cos",
				"costSoFar\tabc"
			],
			[
				"PAth",
				"Path_heuristic\tabc"
			],
			[
				"AS",
				"AStarNode\tabc"
			],
			[
				"As",
				"AStarNodeState"
			],
			[
				"Pa",
				"PathfindingState\tabc"
			],
			[
				"vec",
				"vec3d.h\t(character.c)"
			],
			[
				"is",
				"isTurning\tabc"
			],
			[
				"target",
				"targetLocation\tabc"
			],
			[
				"Sek",
				"SeekingSoundSourceState\tabc"
			],
			[
				"SEe",
				"SeekingLastSeenState\tabc"
			],
			[
				"See",
				"SeekingLastSeenState\tabc"
			],
			[
				"SE",
				"SeekingSoundSourceState\tabc"
			],
			[
				"Seek",
				"SeekingLastSeenState\tabc"
			],
			[
				"tar",
				"target\tabc"
			],
			[
				"Item",
				"ItemCharacterTarget\t(characterstate.h)"
			],
			[
				"None",
				"NoneCharacterTarget\tabc"
			],
			[
				"targ",
				"targetType\tabc"
			],
			[
				"Cahratar",
				"CharacterTarget\t(characterstate.h)"
			],
			[
				"loca",
				"locationToInvestigate\tabc"
			],
			[
				"has",
				"hasLocationToInvestigate\t(gametypes.h)"
			],
			[
				"DEBUG_SP",
				"DEBUG_COLLISION_SPATIAL_HASH\tabc"
			],
			[
				"charac",
				"characterstate.cpp\t(Makefile)"
			],
			[
				"log",
				"logmsg\tabc"
			],
			[
				"us",
				"usbLoggerData\tabc"
			],
			[
				"leng",
				"lengthToWrite\tabc"
			],
			[
				"user",
				"userData\tabc"
			],
			[
				"usb",
				"usbState\tabc"
			],
			[
				"non",
				"nonIntegralVelocity\tabc"
			],
			[
				"Vec",
				"Vec3d_set\t(game.c)"
			],
			[
				"PhysBody_aply",
				"PhysBody_applyWorldCollision\tabc"
			],
			[
				"matrix",
				"matrix_world\t(export_character_model.py)"
			],
			[
				"GL_LIN",
				"GL_LINE_LOOP\tabc"
			],
			[
				"sphere",
				"sphereAABB\tabc"
			],
			[
				"AABB_from",
				"AABB_fromSphere\tabc"
			],
			[
				"sp",
				"sphereRadius\tabc"
			],
			[
				"spher",
				"sphereRadius\tabc"
			],
			[
				"sph",
				"sphereCenter\tabc"
			],
			[
				"FL",
				"FLT_EPSILON\tabc"
			],
			[
				"format",
				"formatVec3d\tabc"
			],
			[
				"glPop",
				"glPopMatrix\tabc"
			],
			[
				"std",
				"std::cout\tabc"
			],
			[
				"form",
				"formatVec3d\tabc"
			],
			[
				"tri",
				"triangle\tabc"
			],
			[
				"tria",
				"triangleAABB\tabc"
			],
			[
				"maxce",
				"maxCellY\tabc"
			],
			[
				"mincel",
				"minCellX\tabc"
			],
			[
				"buck",
				"buckets\tabc"
			],
			[
				"inserT",
				"insertTriangle\tabc"
			],
			[
				"cell",
				"cellPosY\tabc"
			],
			[
				"spa",
				"spatialHashResults\tabc"
			],
			[
				"spatia",
				"spatialHash\tabc"
			],
			[
				"worl",
				"worldMeshSpatialHash\t(physics.h)"
			],
			[
				"Sp",
				"SpatialHash\tabc"
			],
			[
				"university_map_c",
				"university_map_collision_collision_mesh\tabc"
			],
			[
				"Game_ge",
				"Game_getObjRadius\tabc"
			],
			[
				"Game_get",
				"Game_getObjCenter\tabc"
			],
			[
				"re",
				"resultsFound\tabc"
			],
			[
				"max",
				"maxResults\tabc"
			],
			[
				"resu",
				"resultIndex\tabc"
			],
			[
				"V3",
				"Vec3d\tabc"
			],
			[
				"zoom",
				"zoomOut\tabc"
			],
			[
				"spat",
				"spatial_hash\tabc"
			],
			[
				"selec",
				"selectedObject\tabc"
			],
			[
				"wind",
				"window_height\tabc"
			],
			[
				"draw",
				"draw_triangle\tabc"
			],
			[
				"spatialH",
				"spatial_hash_data\tabc"
			],
			[
				"spatial",
				"spatial_hash\t(export_collision_mesh.py)"
			],
			[
				"Spa",
				"spatialHash\t(collision.c)"
			],
			[
				"UNIV",
				"UNIVERSITY_MAP_COLLISION_CELL_OFFSET_IN_DIMENSION\t(university_map_collision.h)"
			],
			[
				"university_map_col",
				"university_map_collision_collision_mesh_hash\t(university_map_collision.h)"
			],
			[
				"buc",
				"bucketIndex\tabc"
			],
			[
				"cel",
				"cellsInDimension\tabc"
			],
			[
				"grid",
				"gridCellSz\tabc"
			],
			[
				"game_tr",
				"game_tri_index\tabc"
			],
			[
				"ver",
				"vert_b\tabc"
			],
			[
				"vert_",
				"vert_a\tabc"
			],
			[
				"exp",
				"exported\t(animation.c)"
			],
			[
				"cli",
				"clickPos\tabc"
			],
			[
				"poin",
				"pointInRect\tabc"
			],
			[
				"gridTo",
				"gridToScreenVec\tabc"
			],
			[
				"off",
				"offsetY\tabc"
			],
			[
				"quan",
				"quantizeVec\tabc"
			],
			[
				"scree",
				"screenToGrid\tabc"
			],
			[
				"mul",
				"mulScalar\tabc"
			],
			[
				"rgb",
				"rgba(255,0,0,1\tabc"
			],
			[
				"scre",
				"screenHeight\tabc"
			],
			[
				"for",
				"for\tfor (…) {…}"
			],
			[
				"fill",
				"fillPixel\tabc"
			],
			[
				"scr",
				"screenWidth\tabc"
			],
			[
				"bucket",
				"bucket_index\tabc"
			],
			[
				"N64",
				"N64_SCALE_FACTOR\tabc"
			],
			[
				"test",
				"testCollisionResults\tabc"
			],
			[
				"sele",
				"selectedObject\tabc"
			],
			[
				"phy",
				"physics\t(physics.c)"
			],
			[
				"poftim",
				"profTimePhysics\tabc"
			],
			[
				"DE",
				"DEBUG_COLLISION_MESH\tabc"
			],
			[
				"prof",
				"profTimeCharacters\tabc"
			]
		]
	},
	"buffers":
	[
		{
			"file": "stage00.c",
			"settings":
			{
				"buffer_size": 28912,
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
		[
			[
				[
					"Emu Build",
					""
				],
				[
					"GL Build",
					""
				],
				[
					"Packages/C++/C++ Single File.sublime-build",
					""
				],
				[
					"Packages/C++/C++ Single File.sublime-build",
					"Run"
				],
				[
					"Packages/Makefile/Make.sublime-build",
					""
				],
				[
					"Packages/Makefile/Make.sublime-build",
					"Clean"
				],
				[
					"Packages/SublimeREPL/sublimerepl_build_system_hack.sublime-build",
					""
				]
			],
			[
				"GL Build",
				""
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 271.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"clan",
				"Clang Format: Format Selection"
			],
			[
				"snak",
				"Convert Case: snake_case"
			],
			[
				"snake",
				"Convert Case: snake_case"
			],
			[
				"goto",
				"SublimeLinter: Goto Error"
			],
			[
				"editpr",
				"Project: Edit Project"
			],
			[
				"ren",
				"File: Rename"
			],
			[
				"edit",
				"Project: Edit Project"
			],
			[
				"setting",
				"Preferences: Settings"
			],
			[
				"format",
				"Clang Format: Format Selection"
			],
			[
				"syn c",
				"Set Syntax: C"
			],
			[
				"sync",
				"Set Syntax: C"
			],
			[
				"sor",
				"Sort Lines"
			],
			[
				"form",
				"JsPrettier: Format Code"
			],
			[
				"sublimelinter",
				"Preferences: SublimeLinter Settings"
			],
			[
				"path",
				"File: Copy Path"
			],
			[
				"close",
				"File: Close All"
			],
			[
				"projec",
				"Project: Edit"
			],
			[
				"del",
				"File: Delete"
			],
			[
				"name",
				"File: Copy Name"
			],
			[
				"upper",
				"Convert Case: Upper Case"
			],
			[
				"came",
				"Convert Case: camelCase"
			],
			[
				"schem",
				"Schemr: List all schemes"
			],
			[
				"theme",
				"Themr: List themes"
			],
			[
				"jav",
				"Set Syntax: JavaScript"
			],
			[
				"them",
				"Themr: List themes"
			],
			[
				"scheme",
				"Schemr: List all schemes"
			],
			[
				"key",
				"Preferences: Key Bindings"
			],
			[
				"keyb",
				"Preferences: Key Bindings"
			],
			[
				"dele",
				"File: Delete"
			],
			[
				"c addre",
				"Snippet: c addressof"
			],
			[
				"",
				":0 - BOF"
			],
			[
				"new snipp",
				"PackageDev: New Raw Snippet"
			],
			[
				"pack oin",
				"Package Control: Install Package"
			],
			[
				"low",
				"Convert Case: Lower Case"
			],
			[
				"forma",
				"JsPrettier: Format Code"
			],
			[
				"c++",
				"Set Syntax: C++"
			],
			[
				"prefere",
				"Preferences: Settings"
			],
			[
				"packin",
				"Package Control: Install Package"
			],
			[
				"sort",
				"Sort Lines"
			],
			[
				"err",
				"SublimeLinter: Goto Error"
			],
			[
				"linter",
				"SublimeLinter: Goto Error"
			],
			[
				"jasv",
				"Set Syntax: JavaScript"
			],
			[
				"got",
				"SublimeLinter: Goto Error"
			],
			[
				"Dele",
				"File: Delete"
			],
			[
				"wrap",
				"Word Wrap: Toggle"
			],
			[
				"upp",
				"Convert Case: Upper Case"
			],
			[
				"wra",
				"Word Wrap: Toggle"
			],
			[
				"s",
				"Sort Lines"
			],
			[
				"uni",
				"Permute Lines: Unique"
			],
			[
				"disable",
				"Package Control: Disable Package"
			],
			[
				"renam",
				"Rename File"
			],
			[
				"linterset",
				"Preferences: SublimeLinter Settings"
			],
			[
				"debug",
				"BracketHighlighter: Enable Debug Mode"
			],
			[
				"brak",
				"BracketHighlighter: Toggle Global Enable"
			],
			[
				"brakethigh",
				"BracketHighlighter: Toggle Global Enable"
			],
			[
				"match",
				"BracketHighlighter: Match Brackets (ignore threshold)"
			],
			[
				"cam",
				"Convert Case: camelCase"
			],
			[
				"scame",
				"Convert Case: camelCase"
			],
			[
				"error",
				"SublimeLinter: Goto Error"
			],
			[
				"de",
				"File: Delete"
			],
			[
				"pyth",
				"Set Syntax: Python"
			],
			[
				"bui",
				"Build With: Emu Build"
			],
			[
				"build",
				"Build With: Emu Build"
			],
			[
				"javc",
				"Set Syntax: JavaScript"
			],
			[
				"synbash",
				"Set Syntax: Bourne Again Shell (bash)"
			],
			[
				"preferlint",
				"Preferences: SublimeLinter Settings"
			],
			[
				"pro",
				"Project: Edit"
			],
			[
				"preferelint",
				"Preferences: SublimeLinter Settings"
			],
			[
				"prefer",
				"Preferences: Settings"
			],
			[
				"Synct",
				"Set Syntax: C++"
			],
			[
				"syn++",
				"Set Syntax: C++"
			],
			[
				"move",
				"File: Move"
			],
			[
				"dle",
				"File: Delete"
			],
			[
				"clang",
				"Clang Format: Select Style"
			],
			[
				"brow",
				"Preferences: Browse Packages"
			],
			[
				"disabl",
				"Package Control: Disable Package"
			],
			[
				"buildview",
				"Disable/Enable buildview for this window"
			],
			[
				"buildgl",
				"Build With: GL Build"
			],
			[
				"pack",
				"Package Control: Install Package"
			],
			[
				"gl bu",
				"Build With: GL Build"
			],
			[
				"rean",
				"File: Rename"
			],
			[
				"sublimelint",
				"Preferences: SublimeLinter Settings"
			],
			[
				"sublimelin",
				"Preferences: SublimeLinter Settings"
			],
			[
				"syntaxc",
				"Set Syntax: C"
			],
			[
				"perma",
				"GitHubinator Permalink"
			],
			[
				"githu",
				"GitHubinator"
			],
			[
				"pac",
				"Package Control: Install Package"
			],
			[
				"pasca",
				"Convert Case: PascalCase"
			],
			[
				"cap",
				"Convert Case: PascalCase"
			],
			[
				"sche",
				"Schemr: List all schemes"
			],
			[
				"sch",
				"Schemr: List all schemes"
			],
			[
				"sett",
				"Preferences: Settings"
			],
			[
				"prefe",
				"Preferences: Settings"
			],
			[
				"dup",
				"File: Duplicate"
			],
			[
				"prett",
				"Preferences: JsPrettier Settings - Default"
			],
			[
				"pret",
				"Preferences: JsPrettier Settings - User"
			],
			[
				"prettier",
				"JsPrettier: Format Code"
			],
			[
				"pre",
				"Preferences: JsPrettier Settings - User"
			],
			[
				"json",
				"Set Syntax: JSON"
			],
			[
				"flow",
				"GitHub Flavored Markdown: Preview"
			],
			[
				"enable",
				"Package Control: Enable Package"
			],
			[
				"pl",
				"Package Control: List Packages"
			],
			[
				"lintthis",
				"SublimeLinter: Lint This View"
			],
			[
				"lint",
				"File: New View into File"
			],
			[
				"lintersett",
				"Preferences: SublimeLinter Settings"
			],
			[
				"linters",
				"Preferences: SublimeLinter Settings"
			],
			[
				"enablepack",
				"Package Control: Enable Package"
			],
			[
				"list linter",
				"SublimeLinter: Reload SublimeLinter and its Plugins"
			],
			[
				"sublimelintesett",
				"Preferences: SublimeLinter Settings"
			],
			[
				"sublimeLinter sett",
				"Preferences: SublimeLinter Settings"
			],
			[
				"lin",
				"SublimeLinter: Lint This View"
			],
			[
				"erro",
				"SublimeLinter: Goto Error"
			],
			[
				"go",
				"SublimeLinter: Goto Error"
			],
			[
				"unfo",
				"Code Folding: Unfold All"
			],
			[
				"unfor",
				"SublimeREPL: SBT for opened folder"
			],
			[
				"sublimlintset",
				"Preferences: SublimeLinter Settings"
			],
			[
				"pretter",
				"Preferences: JsPrettier Settings - User"
			],
			[
				"new view",
				"File: New View into File"
			],
			[
				"tag",
				"Tag: Remove Picked Tags in Document"
			],
			[
				"tag remove",
				"Tag: Remove Picked Tags in Document"
			],
			[
				"musta",
				"Set Syntax: HTML with mustaches"
			],
			[
				"conver",
				"Convert Case: dash-case"
			],
			[
				"reason",
				"Set Syntax: Reason"
			],
			[
				"dl",
				"File: Delete"
			],
			[
				"for",
				"Reason: Format file"
			],
			[
				"fork",
				"GitHub Flavored Markdown: Preview"
			],
			[
				"flo",
				"File: Locate"
			],
			[
				"refm",
				"Reason: Format file"
			]
		],
		"width": 496.0
	},
	"console":
	{
		"height": 471.0,
		"history":
		[
			"view.scope_name(view.sel()[0].begin())",
			"import urllib.request,os,hashlib; h = '7183a2d3e96f11eeadd761d777e62404' + 'e330c659d4bb41d3bdf022e94cab3cd0'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)",
			"import urllib2,os; pf='Package Control.sublime-package'; ipp=sublime.installed_packages_path(); os.makedirs(ipp) if not os.path.exists(ipp) else None; urllib2.install_opener(urllib2.build_opener(urllib2.ProxyHandler())); open(os.path.join(ipp,pf),'wb').write(urllib2.urlopen('http://sublime.wbond.net/'+pf.replace(' ','%20')).read()); print('Please restart Sublime Text to finish installation')"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/Users/jfriend/.wine/drive_c/goose64"
	],
	"file_history":
	[
		"/Users/jfriend/.wine/drive_c/goose64/glgoose.cpp",
		"/Users/jfriend/.wine/drive_c/nintendo/n64kit/nusys/sample/nu1goose64/nodegraph/nodegraph.hpp",
		"/Users/jfriend/.wine/drive_c/nintendo/n64kit/nusys/sample/nu1goose64/university_map_collision.c",
		"/Users/jfriend/.wine/drive_c/nintendo/n64kit/nusys/sample/nu1goose64/main.c",
		"/Users/jfriend/.wine/drive_c/nintendo/n64kit/nusys/sample/nu1goose64/glgoose.cpp",
		"/Users/jfriend/.wine/drive_c/nintendo/n64kit/nusys/sample/nu1goose64/stage00.c",
		"/Users/jfriend/.wine/drive_c/nintendo/n64kit/nusys/sample/nu1goose64/pathfinding.cpp",
		"/Users/jfriend/.wine/drive_c/nintendo/n64kit/nusys/sample/nu1goose64/game.h",
		"/Users/jfriend/.wine/drive_c/nintendo/n64kit/nusys/sample/nu1goose64/character.c",
		"/Users/jfriend/.wine/drive_c/nintendo/n64kit/nusys/sample/nu1goose64/NOTES.md",
		"/Users/jfriend/.wine/drive_c/nintendo/n64kit/nusys/sample/nu1goose64/README.md",
		"/Users/jfriend/.wine/drive_c/nintendo/n64kit/nusys/sample/nu1goose64/gametypes.h",
		"/Users/jfriend/.wine/drive_c/nintendo/n64kit/nusys/sample/nu1goose64/game.c",
		"/Users/jfriend/.wine/drive_c/nintendo/n64kit/nusys/sample/nu1goose64/gameobject.c",
		"/Users/jfriend/.wine/drive_c/nintendo/n64kit/nusys/sample/nu1goose64/item.c",
		"/Users/jfriend/.wine/drive_c/nintendo/n64kit/nusys/sample/nu1goose64/character.h",
		"/Users/jfriend/.wine/drive_c/nintendo/n64kit/nusys/sample/nu1goose64/characterstate.h",
		"/Users/jfriend/.wine/drive_c/nintendo/n64kit/nusys/sample/nu1goose64/pathfinding.c",
		"/Users/jfriend/.wine/drive_c/nintendo/n64kit/nusys/sample/nu1goose64/book.h",
		"/Users/jfriend/.wine/drive_c/nintendo/n64kit/nusys/sample/nu1goose64/constants.h",
		"/Users/jfriend/.wine/drive_c/nintendo/n64kit/nusys/sample/nu1goose64/characterstate.c",
		"/Users/jfriend/.wine/drive_c/nintendo/n64kit/nusys/sample/nu1goose64/ed64io_errors.h",
		"/Users/jfriend/.wine/drive_c/nintendo/n64kit/nusys/sample/nu1goose64/ed64io_sys.h",
		"/Users/jfriend/.wine/drive_c/nintendo/n64kit/nusys/sample/nu1goose64/ed64io_sys.c",
		"/Users/jfriend/.wine/drive_c/nintendo/n64kit/nusys/sample/nu1goose64/ed64io_everdrive.h",
		"/Users/jfriend/.wine/drive_c/nintendo/n64kit/nusys/sample/nu1goose64/ed64io_everdrive.c",
		"/Users/jfriend/.wine/drive_c/nintendo/n64kit/nusys/sample/nu1goose64/goose64.sublime-project",
		"/Users/jfriend/.wine/drive_c/nintendo/n64kit/nusys/sample/nu1goose64/ed64io_usb.h",
		"/Users/jfriend/.wine/drive_c/nintendo/n64kit/nusys/sample/nu1goose64/ed64io_usb.c",
		"/Users/jfriend/.wine/drive_c/nintendo/n64kit/nusys/sample/nu1goose64/build.sh",
		"/Users/jfriend/.wine/drive_c/nintendo/n64kit/nusys/sample/nu1goose64/.gitignore",
		"/Users/jfriend/.wine/drive_c/nintendo/n64kit/nusys/sample/nu1goose64/compile.bat",
		"/Users/jfriend/.wine/drive_c/nintendo/n64kit/nusys/sample/nu1goose64/modeltype.h",
		"/Users/jfriend/.wine/drive_c/nintendo/n64kit/nusys/sample/nu1goose64/modeltype.c",
		"/Users/jfriend/.wine/drive_c/nintendo/n64kit/nusys/sample/nu1goose64/university_map.h",
		"/Users/jfriend/.wine/drive_c/nintendo/n64kit/nusys/sample/nu1goose64/rotation.h",
		"/Users/jfriend/.wine/drive_c/nintendo/n64kit/nusys/sample/nu1goose64/vec2d.c",
		"/Users/jfriend/.wine/drive_c/nintendo/n64kit/nusys/sample/nu1goose64/Makefile",
		"/Users/jfriend/.wine/drive_c/nintendo/n64kit/nusys/sample/nu1goose64/physics.cpp",
		"/Users/jfriend/.wine/drive_c/nintendo/n64kit/nusys/sample/nu1goose64/physics.h",
		"/Users/jfriend/.wine/drive_c/nintendo/n64kit/nusys/sample/nu1goose64/physics.c",
		"/Users/jfriend/.wine/drive_c/nintendo/n64kit/nusys/sample/nu1goose64/deploy.sh",
		"/Users/jfriend/.wine/drive_c/nintendo/n64kit/nusys/sample/nu1goose64/triangleraster.js",
		"/Users/jfriend/.wine/drive_c/nintendo/n64kit/nusys/sample/nu1goose64/triangleraster.html",
		"/Users/jfriend/code/ed64log/make.sh",
		"/Users/jfriend/.wine/drive_c/nintendo/n64kit/nusys/sample/nu1goose64/wavefront64/wavefront64deps/util.lua",
		"/Users/jfriend/.wine/drive_c/nintendo/n64kit/nusys/sample/nu1goose64/ed64io/usb.h",
		"/Users/jfriend/.wine/drive_c/nintendo/n64kit/nusys/sample/nu1goose64/ed64io/everdrive.h",
		"/Users/jfriend/.wine/drive_c/nintendo/n64kit/nusys/sample/nu1goose64/ed64io/sys.c",
		"/Users/jfriend/.wine/drive_c/nintendo/n64kit/nusys/sample/nu1goose64/ed64io/everdrive.c",
		"/Users/jfriend/.wine/drive_c/nintendo/n64kit/nusys/sample/nu1goose64/ed64io/sys.h",
		"/Users/jfriend/.wine/drive_c/nintendo/n64kit/nusys/sample/nu1goose64/ed64io/usb.c",
		"/Users/jfriend/.wine/drive_c/nintendo/n64kit/nusys/sample/nu1goose64/bush.h",
		"/Users/jfriend/.wine/drive_c/nintendo/n64kit/nusys/sample/nu1goose64/wall.h",
		"/Users/jfriend/.wine/drive_c/nintendo/n64kit/nusys/sample/nu1goose64/university_map_collision.h",
		"/Users/jfriend/.wine/drive_c/nintendo/n64kit/nusys/sample/nu1goose64/export_collision_mesh.py",
		"/Users/jfriend/.wine/drive_c/nintendo/n64kit/nusys/sample/nu1goose64/spatial_hash.py",
		"/Users/jfriend/.wine/drive_c/nintendo/n64kit/nusys/sample/nu1goose64/university_map_collision.json",
		"/Users/jfriend/.wine/drive_c/nintendo/n64kit/nusys/sample/nu1goose64/collision.h",
		"/Users/jfriend/.wine/drive_c/nintendo/n64kit/nusys/sample/nu1goose64/collision.c",
		"/Users/jfriend/.wine/drive_c/nintendo/n64kit/nusys/sample/nu1goose64/export_character_model.py",
		"/Users/jfriend/.wine/drive_c/nintendo/n64kit/nusys/sample/nu1goose64/rotation.c",
		"/Users/jfriend/.wine/drive_c/nintendo/n64kit/nusys/sample/nu1goose64/animation.c",
		"/Users/jfriend/.wine/drive_c/nintendo/n64kit/nusys/sample/nu1goose64/vec3d.h",
		"/Users/jfriend/.wine/drive_c/nintendo/n64kit/nusys/sample/nu1goose64/vec3d.c",
		"/Users/jfriend/.wine/drive_c/nintendo/n64kit/nusys/sample/nu1goose64/export_object_model.py",
		"/Users/jfriend/.wine/drive_c/nintendo/n64kit/nusys/sample/nu1goose64/characterrig.h",
		"/Users/jfriend/Library/Application Support/Sublime Text 3/Packages/User/c addressof.sublime-snippet",
		"/Users/jfriend/Library/Application Support/Sublime Text 3/Packages/User/c.sublime-completions",
		"/Users/jfriend/Library/Application Support/Sublime Text 3/Packages/User/c.sublime-completions.sublime-snippet",
		"/Users/jfriend/.wine/drive_c/nintendo/n64kit/nusys/sample/nu1goose64/sd_deploy.sh",
		"/Users/jfriend/.wine/drive_c/nintendo/n64kit/nusys/sample/nu1goose64/goose64.out",
		"/Users/jfriend/.wine/drive_c/nintendo/n64kit/nusys/sample/nu1goose64/player.h",
		"/Users/jfriend/.wine/drive_c/nintendo/n64kit/nusys/sample/nu1goose64/vec2d.h",
		"/Users/jfriend/.wine/drive_c/nintendo/n64kit/nusys/sample/nu1goose64/rebuild_models.sh",
		"/Users/jfriend/.wine/drive_c/nintendo/n64kit/nusys/sample/nu1goose64/animation.h",
		"/Users/jfriend/.wine/drive_c/nintendo/n64kit/nusys/sample/nu1goose64/character_anim.h",
		"/Users/jfriend/.wine/drive_c/nintendo/n64kit/nusys/sample/nu1goose64/gooseanimtypes.h",
		"/Users/jfriend/.wine/drive_c/nintendo/n64kit/nusys/sample/nu1goose64/wavefront64/wavefront64.lua",
		"/Users/jfriend/.wine/drive_c/nintendo/n64kit/nusys/sample/nu1goose64/export_animation.py",
		"/Users/jfriend/.wine/drive_c/nintendo/n64kit/nusys/sample/nu1goose64/ART.md",
		"/Users/jfriend/.wine/drive_c/nintendo/n64kit/nusys/sample/nu1goose64/characteranimtypes.h",
		"/Users/jfriend/.wine/drive_c/nintendo/n64kit/nusys/sample/nu1goose64/character.cpp",
		"/Users/jfriend/.wine/drive_c/nintendo/n64kit/nusys/sample/nu1goose64/collision.cpp",
		"/Users/jfriend/.wine/drive_c/nintendo/n64kit/nusys/sample/nu1goose64/vec2d.cpp",
		"/Users/jfriend/.wine/drive_c/nintendo/n64kit/nusys/sample/nu1goose64/vec3d.cpp",
		"/Users/jfriend/.wine/drive_c/nintendo/n64kit/nusys/sample/nu1goose64/game.cpp",
		"/Users/jfriend/.wine/drive_c/nintendo/n64kit/nusys/sample/nu1goose64/player.c",
		"/Users/jfriend/.wine/drive_c/nintendo/n64kit/nusys/sample/nu1goose64/player.cpp",
		"/Users/jfriend/.wine/drive_c/nintendo/n64kit/nusys/sample/nu1goose64/export_positions.py",
		"/Users/jfriend/.wine/drive_c/nintendo/n64kit/nusys/sample/nu1goose64/animation.cpp",
		"/Users/jfriend/.wine/drive_c/nintendo/n64kit/nusys/sample/nu1goose64/gl/objloader.hpp",
		"/Users/jfriend/.wine/drive_c/nintendo/n64kit/nusys/sample/nu1goose64/gl/objloader.cpp",
		"/Users/jfriend/.wine/drive_c/nintendo/n64kit/nusys/sample/nu1goose64/imgui/examples/imgui_impl_glut.cpp",
		"/Users/jfriend/.wine/drive_c/nintendo/n64kit/nusys/sample/nu1goose64/imgui/examples/example_glut_opengl2/main.cpp",
		"/Users/jfriend/.wine/drive_c/nintendo/n64kit/nusys/sample/nu1goose64/imgui/imgui_internal.h",
		"/Users/jfriend/.wine/drive_c/nintendo/n64kit/nusys/sample/nu1goose64/imgui/imgui.h",
		"/Users/jfriend/.wine/drive_c/nintendo/n64kit/nusys/sample/nu1goose64/gameobject.h",
		"/Users/jfriend/.wine/drive_c/nintendo/n64kit/nusys/sample/nu1goose64/imgui/imgui_demo.cpp",
		"/Users/jfriend/.wine/drive_c/nintendo/n64kit/nusys/sample/nu1goose64/imgui/examples/example_glut_opengl2/Makefile",
		"/Users/jfriend/.wine/drive_c/nintendo/n64kit/nusys/sample/nu1goose64/models/Person.blend",
		"/Users/jfriend/.wine/drive_c/nintendo/n64kit/nusys/sample/nu1goose64/models/Person.blend1",
		"/Users/jfriend/.wine/drive_c/nintendo/n64kit/nusys/sample/nu1goose64/characterrig.obj",
		"/Users/jfriend/.wine/drive_c/nintendo/n64kit/nusys/sample/nu1goose64/glbuild.sh",
		"/Users/jfriend/code/N64-SoundTester/README.md",
		"/Users/jfriend/.wine/drive_c/nintendo/n64kit/nusys/sample/README.md",
		"/Users/jfriend/.wine/drive_c/nintendo/n64kit/nusys/sample/nu1goose64/input.c",
		"/Users/jfriend/.wine/drive_c/nintendo/n64kit/nusys/sample/nu1goose64/goose_anim.h",
		"/Users/jfriend/.wine/drive_c/nintendo/n64kit/nusys/sample/nu1goose64/gooserig.h",
		"/Users/jfriend/.wine/drive_c/nintendo/n64kit/nusys/sample/nu1goose64/build_and_run.sh",
		"/Users/jfriend/.wine/drive_c/nintendo/n64kit/nusys/sample/nu1goose64/graphic.h",
		"/Users/jfriend/.wine/drive_c/nintendo/n64kit/nusys/sample/nu1goose64/n64compat.h",
		"/Users/jfriend/.wine/drive_c/nintendo/n64kit/nusys/sample/nu1goose64/gameutils.cpp",
		"/Users/jfriend/.wine/drive_c/nintendo/n64kit/nusys/sample/nu1goose64/item.h",
		"/Users/jfriend/.wine/drive_c/nintendo/n64kit/nusys/sample/nu1goose64/input.h",
		"/Users/jfriend/.wine/drive_c/nintendo/n64kit/nusys/sample/nu1goose64/item.cpp",
		"/Users/jfriend/.wine/drive_c/nintendo/n64kit/nusys/sample/nu1goose64/mathutils.h",
		"/Users/jfriend/.wine/drive_c/nintendo/n64kit/nusys/sample/nu1goose64/gameutils.c",
		"/Users/jfriend/.wine/drive_c/nintendo/n64kit/nusys/sample/nu1goose64/gooserig.obj",
		"/Users/jfriend/.wine/drive_c/nintendo/n64kit/nusys/sample/nu1goose64/goose.h",
		"/Users/jfriend/.wine/drive_c/nintendo/n64kit/nusys/sample/nu1goose64/GRAPHICS.md",
		"/Users/jfriend/.wine/drive_c/nintendo/n64kit/nusys/sample/nu1goose64/N64.md",
		"/Users/jfriend/.wine/drive_c/nintendo/n64kit/nusys/sample/nu1goose64/university.blend",
		"/Users/jfriend/.wine/drive_c/nintendo/n64kit/nusys/sample/nu1goose64/university.blend1",
		"/Users/jfriend/.wine/drive_c/nintendo/n64kit/nusys/sample/nu1goose64/worldobjects.h",
		"/Users/jfriend/.wine/drive_c/nintendo/n64kit/nusys/sample/nu1goose64/gooseanim.h",
		"/Users/jfriend/.wine/drive_c/nintendo/n64kit/nusys/sample/nu1goose64/gameobject.cpp",
		"/Users/jfriend/.wine/drive_c/nintendo/n64kit/nusys/sample/nu1goose64/goose64glut/goose64glut.xcodeproj/project.xcworkspace/xcuserdata/jfriend.xcuserdatad/UserInterfaceState.xcuserstate"
	],
	"find":
	{
		"height": 40.0
	},
	"find_in_files":
	{
		"height": 121.0,
		"where_history":
		[
			""
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"getModelDisplayList"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "stage00.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 28912,
						"regions":
						{
						},
						"selection":
						[
							[
								532,
								532
							]
						],
						"settings":
						{
							"SL.354.region_keys":
							[
								"SL.clang.Highlights.|881619c484be4284235a73c5d286682d648a10b2cc9fd87812e98df311550282|region.redish markup.error.sublime_linter|32",
								"SL.clang.Gutter.|region.redish markup.error.sublime_linter|dot",
								"sublime_linter.protected_regions"
							],
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 82.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 31.0
	},
	"input":
	{
		"height": 44.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.SublimeLinter":
	{
		"height": 0.0
	},
	"output.SublimeLinter Messages":
	{
		"height": 407.0
	},
	"output.aaa_package_dev":
	{
		"height": 116.0
	},
	"output.exec":
	{
		"height": 382.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.mdpopups":
	{
		"height": 0.0
	},
	"output.package_dev":
	{
		"height": 116.0
	},
	"output.unsaved_changes":
	{
		"height": 138.0
	},
	"pinned_build_system": "",
	"project": "goose64glut.sublime-project",
	"replace":
	{
		"height": 58.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"glgoo",
				"glgoose.cpp"
			],
			[
				"proj",
				"goose64.sublime-project"
			],
			[
				"gl",
				"glgoose.cpp"
			],
			[
				"path",
				"pathfinding.h"
			],
			[
				"no",
				"nodegraph/nodegraph.hpp"
			],
			[
				"unimepcol",
				"university_map_collision.h"
			],
			[
				"unimaco",
				"university_map_collision.c"
			],
			[
				"sta",
				"stage00.c"
			],
			[
				"make",
				"Makefile"
			],
			[
				"glg",
				"glgoose.cpp"
			],
			[
				".h",
				"game.h"
			],
			[
				"state",
				"characterstate.h"
			],
			[
				"charah",
				"character.h"
			],
			[
				"chara",
				"character.c"
			],
			[
				"charasta",
				"characterstate.c"
			],
			[
				"characsta",
				"characterstate.h"
			],
			[
				"note",
				"NOTES.md"
			],
			[
				"rea",
				"README.md"
			],
			[
				"giti",
				".gitignore"
			],
			[
				"com",
				"compile.bat"
			],
			[
				"deply",
				"deploy.sh"
			],
			[
				"bui",
				"build.sh"
			],
			[
				".bat",
				"compile.bat"
			],
			[
				"glgo",
				"glgoose.cpp"
			],
			[
				"vec2d",
				"vec2d.c"
			],
			[
				"tria",
				"triangleraster.js"
			],
			[
				"ed64io_everdrive.h",
				"ed64io_everdrive.h"
			],
			[
				"read",
				"README.md"
			],
			[
				"depl",
				"deploy.sh"
			],
			[
				"mak",
				"Makefile"
			],
			[
				"mode",
				"modeltype.h"
			],
			[
				"model",
				"modeltype.c"
			],
			[
				"charcpp",
				"characterstate.cpp"
			],
			[
				"consta",
				"constants.h"
			],
			[
				"ediou",
				"ed64io_usb.h"
			],
			[
				"usbh",
				"ed64io_usb.h"
			],
			[
				"makef",
				"Makefile"
			],
			[
				"ed64io/usb.h",
				"ed64io/usb.h"
			],
			[
				"bush.",
				"bush.h"
			],
			[
				"wall",
				"wall.h"
			],
			[
				"stag",
				"stage00.c"
			],
			[
				"univemap",
				"university_map.h"
			],
			[
				"conta",
				"constants.h"
			],
			[
				"phy",
				"physics.c"
			],
			[
				"expoer",
				"export_character_model.py"
			],
			[
				"collh",
				"collision.h"
			],
			[
				"phys",
				"physics.h"
			],
			[
				"json",
				"university_map_collision.json"
			],
			[
				"univermapco",
				"university_map_collision.h"
			],
			[
				"const",
				"constants.h"
			],
			[
				"constan",
				"constants.h"
			],
			[
				"",
				"glgoose.cpp"
			],
			[
				"modetp",
				"modeltype.c"
			],
			[
				"univmap",
				"university_map.h"
			],
			[
				"vec",
				"vec3d.h"
			],
			[
				"v3",
				"vec3d.c"
			],
			[
				"unimap",
				"university_map.h"
			],
			[
				"glo",
				"glgoose.cpp"
			],
			[
				"ph",
				"physics.c"
			],
			[
				"constants",
				"constants.h"
			],
			[
				"collc",
				"collision.c"
			],
			[
				"cons",
				"constants.h"
			],
			[
				"objloader.hpp",
				"gl/objloader.hpp"
			],
			[
				"game",
				"game.c"
			],
			[
				"v3d",
				"vec3d.c"
			],
			[
				"ve",
				"vec3d.h"
			],
			[
				"vec3d",
				"vec3d.h"
			],
			[
				"exporpo",
				"export_positions.py"
			],
			[
				"modeltyp",
				"modeltype.c"
			],
			[
				"exampleglcpp",
				"imgui/examples/example_glut_opengl2/main.cpp"
			],
			[
				"demo",
				"imgui/imgui_demo.cpp"
			],
			[
				"g",
				"glgoose.cpp"
			],
			[
				"Game.h",
				"game.h"
			],
			[
				"GameObj",
				"gameobject.c"
			],
			[
				"Vec",
				"vec3d.c"
			],
			[
				"gameh",
				"game.h"
			],
			[
				"glut2mak",
				"imgui/examples/example_glut_opengl2/Makefile"
			],
			[
				"exaglut",
				"imgui/examples/example_glut_opengl2/main.cpp"
			],
			[
				"expora",
				"export_animation.py"
			],
			[
				"charach",
				"character.h"
			],
			[
				"char",
				"character.c"
			],
			[
				"expor",
				"export_character_model.py"
			],
			[
				"expoch",
				"export_character_model.py"
			],
			[
				"physi",
				"physics.c"
			],
			[
				"characc",
				"character.c"
			],
			[
				"expo",
				"export_character_model.py"
			],
			[
				"stage",
				"stage00.c"
			],
			[
				"pla",
				"player.c"
			],
			[
				"chrac",
				"character.c"
			],
			[
				"pl",
				"player.c"
			],
			[
				"chrarig",
				"characterrig.h"
			],
			[
				"charaob",
				"characterrig.obj"
			],
			[
				"chracrigob",
				"characterrig.obj"
			],
			[
				"art",
				"ART.md"
			],
			[
				"animtype",
				"gooseanimtypes.h"
			],
			[
				"wave",
				"wavefront64/wavefront64.lua"
			],
			[
				"rebui",
				"rebuild_models.sh"
			],
			[
				"chararig",
				"characterrig.obj"
			],
			[
				"charaanim",
				"character_anim.h"
			],
			[
				"exporan",
				"export_animation.py"
			],
			[
				"chaa",
				"character.h"
			],
			[
				"Model",
				"modeltype.c"
			],
			[
				"vec3",
				"vec3d.c"
			],
			[
				"exporpos",
				"export_positions.py"
			],
			[
				"de",
				"deploy.sh"
			],
			[
				"glsh",
				"glbuild.sh"
			],
			[
				"mae",
				"Makefile"
			],
			[
				"item",
				"item.c"
			],
			[
				"hyh",
				"physics.h"
			],
			[
				"plah",
				"player.h"
			],
			[
				"play",
				"player.c"
			],
			[
				"gameobj",
				"gameobject.h"
			],
			[
				"gametyp",
				"gametypes.h"
			],
			[
				"ani",
				"animation.h"
			],
			[
				"intp",
				"input.c"
			],
			[
				"in",
				"input.h"
			],
			[
				"plaer",
				"player.c"
			],
			[
				"gametypes",
				"gametypes.h"
			],
			[
				"itemh",
				"item.h"
			],
			[
				"anim",
				"animation.h"
			],
			[
				"goosme",
				"gooseanimtypes.h"
			],
			[
				"gameobject",
				"gameobject.c"
			],
			[
				"playc",
				"player.c"
			],
			[
				"player",
				"player.c"
			],
			[
				"GameOb",
				"gameobject.h"
			],
			[
				"un",
				"university_map.h"
			],
			[
				"Univeh",
				"university_map.h"
			],
			[
				"goose_ami",
				"goose_anim.h"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"~/code/posts/posts.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 370.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"stage",
				"stage00"
			],
			[
				"timeInMilliseconds",
				"timeInMilliseconds"
			],
			[
				"CUR_TIME_MS",
				"CUR_TIME_MS"
			],
			[
				"game",
				"Game"
			],
			[
				"debugPrintf",
				"debugPrintf"
			],
			[
				"drawPath",
				"drawPathfindingGraph"
			],
			[
				"draw",
				"drawPathfindingGraph"
			],
			[
				"Vec3d_toString",
				"Vec3d_toString"
			],
			[
				"Vec3d",
				"Vec3d"
			],
			[
				"clam",
				"CLAMP"
			],
			[
				"PathfindingState",
				"PathfindingState"
			],
			[
				"NodeState",
				"NodeState"
			],
			[
				"Path_initState",
				"Path_initState"
			],
			[
				"game_in",
				"Game_init"
			],
			[
				"Character_canSee",
				"Character_canSeePlayer"
			],
			[
				"characterini",
				"Character_init"
			],
			[
				"chracter",
				"Character"
			],
			[
				"semimple",
				"PhysBody_integrateMotionSemiImplicitEuler"
			],
			[
				"sleep",
				"sleep"
			],
			[
				"SP_regs_s",
				"_SP_regs_s"
			],
			[
				"dma_read_s",
				"dma_read_s"
			],
			[
				"IO_WRITE",
				"IO_WRITE"
			],
			[
				"constants",
				"CONSTANTS_H"
			],
			[
				"print",
				"printf"
			],
			[
				"usbLoggerLog",
				"usbLoggerLog"
			],
			[
				"evd_fifoWr",
				"evd_fifoWr"
			],
			[
				"evd_isDmaBusy",
				"evd_isDmaBusy"
			],
			[
				"EVD_ERROR_FIFO_TIMEOUT",
				"EVD_ERROR_FIFO_TIMEOUT"
			],
			[
				"evd_fifoTxe",
				"evd_fifoTxe"
			],
			[
				"evdPiWriteRom",
				"evdPiWriteRom"
			],
			[
				"evd_isDmaTimeout",
				"evd_isDmaTimeout"
			],
			[
				"NU_PI_CART_BLOCK_READ_SIZE",
				"NU_PI_CART_BLOCK_READ_SIZE"
			],
			[
				"dma_write_s",
				"dma_write_s"
			],
			[
				"evd_fifoWrNonblock",
				"evd_fifoWrNonblock"
			],
			[
				"usbListener",
				"usbListener"
			],
			[
				"evd_fifoWrFromCart",
				"evd_fifoWrFromCart"
			],
			[
				"evd_fifoRxf",
				"evd_fifoRxf"
			],
			[
				"evd_init",
				"evd_init"
			],
			[
				"io_wr",
				"IO_WRITE"
			],
			[
				"io_",
				"IO_READ"
			],
			[
				"evd_fifoRd",
				"evd_fifoRd"
			],
			[
				"rendersce",
				"renderScene"
			],
			[
				"gameup",
				"Game_update"
			],
			[
				"Game_findObjectByType",
				"Game_findObjectByType"
			],
			[
				"chara",
				"Character_update"
			],
			[
				"drawgu",
				"drawGUI"
			],
			[
				"drawG",
				"drawGUI"
			],
			[
				"e",
				"Euler"
			],
			[
				"phy",
				"PhysBody"
			],
			[
				"translatewi",
				"PhysBody_translateWithoutForce"
			],
			[
				"Collision_distancePointTriangleExact",
				"Collision_distancePointTriangleExact"
			],
			[
				"SphereTriangleCollision",
				"SphereTriangleCollision"
			],
			[
				"centroid",
				"Triangle_getCentroid"
			],
			[
				"PhysWorldData",
				"PhysWorldData"
			],
			[
				"UNIVERSITY_MAP_COLLISION_LENGTH",
				"UNIVERSITY_MAP_COLLISION_LENGTH"
			],
			[
				"testC",
				"testCollision"
			],
			[
				"Collision_testMeshSphereCollision",
				"Collision_testMeshSphereCollision"
			],
			[
				"drawcol",
				"drawCollisionMesh"
			],
			[
				"SpatialHash_getBucket",
				"SpatialHash_getBucket"
			],
			[
				"drawCo",
				"drawCollisionMesh"
			],
			[
				"create_spatial_hash",
				"create_spatial_hash"
			],
			[
				"drawg",
				"drawGUI"
			],
			[
				"Spat",
				"SpatialHashBucket"
			],
			[
				"physW",
				"PhysWorldData"
			],
			[
				"physinte",
				"PhysBody_integrateBodies"
			],
			[
				"PhysState_step",
				"PhysState_step"
			],
			[
				"gameupda",
				"Game_updatePhysics"
			],
			[
				"gameini",
				"Game_init"
			],
			[
				"characupda",
				"Character_update"
			],
			[
				"game_upda",
				"Game_update"
			],
			[
				"phyup",
				"PhysBody_update"
			],
			[
				"integra",
				"PhysBody_integrateMotion"
			],
			[
				"worldData",
				"PhysWorldData"
			],
			[
				"PhysState_init",
				"PhysState_init"
			],
			[
				"Game_init",
				"Game_init"
			],
			[
				"drawgui",
				"drawGUI"
			],
			[
				"Vec3d_normalise",
				"Vec3d_normalise"
			],
			[
				"Vec3d_cross",
				"Vec3d_cross"
			],
			[
				"getNorm",
				"Triangle_getNormal"
			],
			[
				"charac",
				"Character"
			],
			[
				"distance",
				"Vec3d_distanceTo"
			],
			[
				"Collision_sphereTriangleIsSeparated",
				"Collision_sphereTriangleIsSeparated"
			],
			[
				"Triangle_getNormal",
				"Triangle_getNormal"
			],
			[
				"PhysState",
				"PhysState"
			],
			[
				"loado",
				"loadOBJ"
			],
			[
				"min",
				"MIN"
			],
			[
				"ve2d",
				"VEC2D_H"
			],
			[
				"Vec3d_print",
				"Vec3d_print"
			],
			[
				"InputInt",
				"Input_init"
			],
			[
				"updatePh",
				"Game_updatePhysics"
			],
			[
				"Game_getObjCenter",
				"Game_getObjCenter"
			],
			[
				"updaph",
				"Game_updatePhysics"
			],
			[
				"gameu",
				"Game_update"
			],
			[
				"Game_update",
				"Game_update"
			],
			[
				"objCenter",
				"Game_getObjCenter"
			],
			[
				"getObj",
				"Game_getObjCenter"
			],
			[
				"gameupdaph",
				"Game_updatePhysics"
			],
			[
				"getCen",
				"GetCenter"
			],
			[
				"model",
				"ModelProperties"
			],
			[
				"physb",
				"PhysBody"
			],
			[
				"ImGuiInputTextFlags",
				"ImGuiInputTextFlags_"
			],
			[
				"inputFlo",
				"InputFloat"
			],
			[
				"phys",
				"PhysBody"
			],
			[
				"Gameo",
				"GameObject"
			],
			[
				"InputF",
				"InputFloat3"
			],
			[
				"ImGuiInputTextFlags_",
				"ImGuiInputTextFlags_"
			],
			[
				"InputFloat3",
				"InputFloat3"
			],
			[
				"inputflo",
				"InputFloat3"
			],
			[
				"inputfl",
				"InputFloat"
			],
			[
				"InputFloat",
				"InputFloat"
			],
			[
				"GameObj",
				"GameObject"
			],
			[
				"EulerDe",
				"EulerDegrees"
			],
			[
				"FLT_EPSILON",
				"FLT_EPSILON"
			],
			[
				"rayinter",
				"Game_rayIntersectsSphere"
			],
			[
				"gameray",
				"Game_rayIntersectsSphere"
			],
			[
				"vec3d",
				"Vec3d"
			],
			[
				"Game_getIntersectingObject",
				"Game_getIntersectingObject"
			],
			[
				"RaycastTraceEvent",
				"RaycastTraceEvent"
			],
			[
				"Game_traceRaycast",
				"Game_traceRaycast"
			],
			[
				"Game_rayIntersectsSphere",
				"Game_rayIntersectsSphere"
			],
			[
				"vec3ddir",
				"Vec3d_directionTo"
			],
			[
				"Vec3d_init",
				"Vec3d_init"
			],
			[
				"cahraccanse",
				"Character_canSeeItem"
			],
			[
				"intersec",
				"Game_rayIntersectsSphere"
			],
			[
				"ImGui_ImplGLUT_InstallFuncs",
				"ImGui_ImplGLUT_InstallFuncs"
			],
			[
				"AnimatioFra",
				"AnimationFrame_lerp"
			],
			[
				"AnimationFrame_lerp",
				"AnimationFrame_lerp"
			],
			[
				"characmove",
				"Character_moveTowards"
			]
		],
		"width": 560.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": false,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 355.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
