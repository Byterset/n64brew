{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"total",
				"totalUpdates\tabc"
			],
			[
				"ed64io",
				"ed64io.h\t(main.c)"
			],
			[
				"seq",
				"seqPlaying\tabc"
			],
			[
				"Honk",
				"Honk1Sound\tabc"
			],
			[
				"Hon",
				"Honk5Sound"
			],
			[
				"NON",
				"NoneSound\t(sound.h)"
			],
			[
				"ed",
				"ed64PrintfSync2\tabc"
			],
			[
				"end",
				"endif\t(Makefile)"
			],
			[
				"got",
				"gotFirstInterrupt\tabc"
			],
			[
				"LOG",
				"LOG_SAMPLING_PROFILE\tabc"
			],
			[
				"sampl",
				"sampling_profiler.h\t(stage00.c)"
			],
			[
				"thread",
				"threadToProfile\tabc"
			],
			[
				"MAX",
				"MAX_PROFILE_SIZE\tabc"
			],
			[
				"error",
				"errorDesc\tabc"
			],
			[
				"print",
				"printf\tprintf …"
			],
			[
				"ed64",
				"ed64Printf\t(constants.h)"
			],
			[
				"RENDERER",
				"RENDERER_PAINTERS_ALGORITHM\tabc"
			],
			[
				"RENDER",
				"RENDERER_FRUSTUM_CULLING\tabc"
			],
			[
				"Vec3d_",
				"Vec3d_set\t(vec3d.c)"
			],
			[
				"stage",
				"stage00\t(main.c)"
			],
			[
				"debug",
				"debugPrintf\tabc"
			],
			[
				"OS",
				"OSThread\tabc"
			],
			[
				"ed64Prin",
				"ed64PrintStackTrace\t(ed64io_fault.c)"
			],
			[
				"Render",
				"RendererSortDistance\tabc"
			],
			[
				"ModelTyp",
				"ModelTypeStrings\t(stage00.c)"
			],
			[
				"visi",
				"visibleObjectsCount\tabc"
			],
			[
				"zW",
				"zWriteObjectsCount\tabc"
			],
			[
				"Game",
				"GameObject\tabc"
			],
			[
				"Renderer",
				"Renderer_isZWriteGameObject\tabc"
			],
			[
				"Gam",
				"GameObject\tabc"
			],
			[
				"intersec",
				"intersect\t(collision.c)"
			],
			[
				"High",
				"HIGH_RESOLUTION_HALF_Y\tabc"
			],
			[
				"snd",
				"snd_no\tabc"
			],
			[
				"SCR",
				"SCREEN_HT\tabc"
			],
			[
				"SCRE",
				"SCREEN_Y\t(graphic.h)"
			],
			[
				"SCREE",
				"SCREEN_X\t(graphic.h)"
			],
			[
				"SC",
				"SCREEN_X\t(graphic.h)"
			],
			[
				"SCREN",
				"SCREEN_WD\tabc"
			],
			[
				"visib",
				"visibleObjDistance\tabc"
			],
			[
				"view",
				"viewport\tabc"
			],
			[
				"proj",
				"projection\tabc"
			],
			[
				"ti",
				"tick\t(player.c)"
			],
			[
				"NoneS",
				"NoneSprite\t(animation.c)"
			],
			[
				"Mtx",
				"MtxF\tabc"
			],
			[
				"Mt",
				"MtxF\tabc"
			],
			[
				"sprite",
				"spriteAttachment\t(animation.h)"
			],
			[
				"spr",
				"spriteAttachment\t(animation.h)"
			],
			[
				"spri",
				"spriteType\tabc"
			],
			[
				"Spr",
				"Sprite_honk1spr\t(honk1spr.h)"
			],
			[
				"n64",
				"n64audio.c\tabc"
			],
			[
				"inc",
				"inc\t#include \"…\""
			],
			[
				"E",
				"EXTERN_SEGMENT\tabc"
			],
			[
				"objTrans",
				"objTransforms\t(graphic.h)"
			],
			[
				"Garden",
				"GardenerCharacterModel\t(game.c)"
			],
			[
				"debu",
				"debugPrintf\tabc"
			],
			[
				"HIGH",
				"HIGH_RESOLUTION_OPTS\t(renderer.c)"
			],
			[
				"SCREEN",
				"SCREEN_WD\tabc"
			],
			[
				"Chara",
				"GardenerCharacterModel"
			],
			[
				"dis",
				"distance\t(renderer.c)"
			],
			[
				"ob",
				"obj\tabc"
			],
			[
				"Z",
				"ZBUFFER_ADDR\t(graphic.h)"
			],
			[
				"centr",
				"centroidOffset\tabc"
			],
			[
				"selec",
				"selectObjectAtScreenPos\tabc"
			],
			[
				"draw",
				"drawMarker\tabc"
			],
			[
				"las",
				"lastProjection\tabc"
			],
			[
				"enable",
				"enableLighting\tabc"
			],
			[
				"drawY",
				"drawRaycastLine\tabc"
			],
			[
				"Game_ge",
				"Game_getObjRadius\t(game.c)"
			],
			[
				"glPop",
				"glPopMatrix\tabc"
			],
			[
				"Vec",
				"Vec3d\tabc"
			],
			[
				"res",
				"result\tabc"
			],
			[
				"clo",
				"closestObjHit\tabc"
			],
			[
				"close",
				"closestObjHitDist\tabc"
			],
			[
				"Game_get",
				"Game_getIntersectingObjectID\t(glgoose.cpp)"
			],
			[
				"exi",
				"exitCode\tabc"
			],
			[
				"bone",
				"boneIndex\tabc"
			],
			[
				"bon",
				"boneIdx\tabc"
			],
			[
				"modeltype",
				"ModelTypeStrings"
			],
			[
				"flor",
				"floorHeight\tabc"
			],
			[
				"floor",
				"floorHeight\tabc"
			],
			[
				"Model",
				"ModelTypeStrings\tabc"
			],
			[
				"char",
				"characterrig\t(characterrig.h)"
			],
			[
				"character_anim",
				"character_anim_data\t(character_anim.h)"
			],
			[
				"Anim",
				"AnimationFrame\tabc"
			],
			[
				"MAXME",
				"MAX_ANIM_MESH_PARTS\t(animation.h)"
			],
			[
				"chrac",
				"characterhand_r_characterhand_rmesh\t(character_anim.h)"
			],
			[
				"mesh",
				"meshPart\tabc"
			],
			[
				"anims",
				"animStateInt\tabc"
			],
			[
				"blen",
				"blender_bone_name\tabc"
			],
			[
				"GOOSE",
				"GOOSE_WALK_SPEED_RATIO\tabc"
			],
			[
				"Character_ang",
				"Character_topDownAngleMagToObj\tabc"
			],
			[
				"pos",
				"position\tabc"
			],
			[
				"angle",
				"angleToPlayer\tabc"
			],
			[
				"glp",
				"glPopAttrib\tabc"
			],
			[
				"Bu",
				"BushModel\tabc"
			],
			[
				"_",
				"__N64__\tabc"
			],
			[
				"phs",
				"physBody\t(player.c)"
			],
			[
				"USE",
				"USE_PHYSICS_MOVEMENT\t(player.c)"
			],
			[
				"Phys",
				"PhysBody\tabc"
			],
			[
				"pla",
				"playerMovementScaled\tabc"
			],
			[
				"phy",
				"physBody\tabc"
			],
			[
				"items",
				"itemsCount\tabc"
			],
			[
				"non",
				"nonIntegralVelocity\tabc"
			],
			[
				"ph",
				"physBody\tabc"
			],
			[
				"phys",
				"physicsBodies\tabc"
			],
			[
				"NUM_",
				"NUM_ITEMS\tabc"
			],
			[
				"CHARAtr",
				"NUM_CHARACTERS"
			],
			[
				"model",
				"modelType\tabc"
			],
			[
				"GAme",
				"GameObject\tabc"
			],
			[
				"Goose",
				"GooseModel\tabc"
			],
			[
				"mode",
				"modelTypesProperties\tabc"
			],
			[
				"zoom",
				"zoomIn\t(input.c)"
			],
			[
				"Mode",
				"ModelType\t(glgoose.cpp)"
			],
			[
				"rot",
				"rotation\tabc"
			],
			[
				"Eul",
				"EulerDegrees_origin\t(rotation.h)"
			],
			[
				"Euler",
				"EulerDegrees\tabc"
			],
			[
				"hel",
				"heldItem\tabc"
			],
			[
				"item",
				"itemHolder\tabc"
			],
			[
				"goose_",
				"goosehead_gooseheadmesh\t(glgoose.cpp)"
			],
			[
				"Obj",
				"ObjModel\tabc"
			],
			[
				"off",
				"offset\tabc"
			],
			[
				"animDa",
				"animDataNumBones\tabc"
			],
			[
				"animfra",
				"animFrameB\tabc"
			],
			[
				"rad",
				"radiansA\tabc"
			],
			[
				"EulerDeg",
				"EulerDegrees_fromEuler\t(rotation.h)"
			],
			[
				"degTo",
				"degToRad\t(constants.h)"
			],
			[
				"Eu",
				"EulerDegrees\tabc"
			],
			[
				"qu",
				"quaternionA\tabc"
			]
		]
	},
	"buffers":
	[
		{
			"file": "main.c",
			"settings":
			{
				"buffer_size": 4258,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "ed64io_usb.c",
			"settings":
			{
				"buffer_size": 7850,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"contents": "Searching 351 files for \"ed64PrintFuncImpl\" (case sensitive)\n\n/Users/jfriend/.wine/drive_c/goose64/ed64io_usb.c:\n  268  \n  269  // to make osSyncPrintf work:\n  270: // __printfunc = ed64PrintFuncImpl;\n  271: void* ed64PrintFuncImpl(void* str, register const char* buf, register int n) {\n  272    void* ret = _PrintfImplUSBAsync(str, buf, n);\n  273    // wait for previous flush to finish, and drain logger buffer\n\n/Users/jfriend/.wine/drive_c/goose64/ed64io_usb.h:\n   42  int ed64SendBinaryData(const void* data, u16 type, u16 length);\n   43  \n   44: void* ed64PrintFuncImpl(void* str, register const char* buf, register int n);\n   45  \n   46  #endif /* _ED64IO_USB_H */\n\n/Users/jfriend/.wine/drive_c/goose64/goose64.out:\n    <binary>\n\n/Users/jfriend/.wine/drive_c/goose64/main.c:\n   75  \n   76    // overwrite osSyncPrintf impl\n   77:   __printfunc = (void*)ed64PrintFuncImpl;\n   78  \n   79    osSyncPrintf(\"testing 1 2 3\\n\");\n\n8 matches across 4 files\n\n\nSearching 349 files for \"ed64StartWatchdogThread\" (case sensitive)\n\n/Users/jfriend/.wine/drive_c/goose64/disassembly.txt:\n 3576  80129c54 g       ..collision\t00000008 garden_map_collision_collision_mesh_hash_bucket_4978_data\n 3577  8006e210 g       ..code\t00000000 __osSetFpcCsr\n 3578: 8003fb40 g     F ..code\t00000190 ed64StartWatchdogThread\n 3579  80028560 g     F ..code\t00000054 shouldLerpAnimation\n 3580  8012a500 g       ..collision\t00000008 garden_map_collision_collision_mesh_hash_bucket_3642\n ....\n 4615  800268cc <initStage00+46c> lui $a0,32782\n 4616  800268d0 <initStage00+470> addiu $a0,$a0,23168\n 4617: 800268d4 <initStage00+474> jal 8003fb40 <ed64StartWatchdogThread>\n 4618  ...\n 4619  800268dc <initStage00+47c> lui $a0,32777\n ....\n 30314  8003fb38 <watchdogproc+118> jr $ra\n 30315  ...\n 30316: 8003fb40 <ed64StartWatchdogThread> addiu $sp,$sp,-48\n 30317: 8003fb44 <ed64StartWatchdogThread+4> sw $ra,44($sp)\n 30318: 8003fb48 <ed64StartWatchdogThread+8> sw $s8,40($sp)\n 30319: 8003fb4c <ed64StartWatchdogThread+c> move $s8,$sp\n 30320: 8003fb50 <ed64StartWatchdogThread+10> sw $a0,48($s8)\n 30321: 8003fb54 <ed64StartWatchdogThread+14> move $a0,$zero\n 30322: 8003fb58 <ed64StartWatchdogThread+18> jal 80062f60 <osGetThreadPri>\n 30323  ...\n 30324: 8003fb60 <ed64StartWatchdogThread+20> sw $v0,32($s8)\n 30325: 8003fb64 <ed64StartWatchdogThread+24> lw $v0,48($s8)\n 30326: 8003fb68 <ed64StartWatchdogThread+28> lui $at,32776\n 30327: 8003fb6c <ed64StartWatchdogThread+2c> sw $v0,12136($at)\n 30328: 8003fb70 <ed64StartWatchdogThread+30> li $v0,148\n 30329: 8003fb74 <ed64StartWatchdogThread+34> lui $at,32777\n 30330: 8003fb78 <ed64StartWatchdogThread+38> sw $v0,17772($at)\n 30331: 8003fb7c <ed64StartWatchdogThread+3c> lui $v1,32777\n 30332: 8003fb80 <ed64StartWatchdogThread+40> lw $v1,17772($v1)\n 30333: 8003fb84 <ed64StartWatchdogThread+44> addiu $v0,$v1,-1\n 30334: 8003fb88 <ed64StartWatchdogThread+48> move $a0,$zero\n 30335: 8003fb8c <ed64StartWatchdogThread+4c> move $a1,$v0\n 30336: 8003fb90 <ed64StartWatchdogThread+50> jal 80062fb0 <osSetThreadPri>\n 30337  ...\n 30338: 8003fb98 <ed64StartWatchdogThread+58> lui $a0,32777\n 30339: 8003fb9c <ed64StartWatchdogThread+5c> addiu $a0,$a0,17744\n 30340: 8003fba0 <ed64StartWatchdogThread+60> lui $a1,32777\n 30341: 8003fba4 <ed64StartWatchdogThread+64> addiu $a1,$a1,17768\n 30342: 8003fba8 <ed64StartWatchdogThread+68> li $a2,1\n 30343: 8003fbac <ed64StartWatchdogThread+6c> jal 8005d4d0 <osCreateMesgQueue>\n 30344  ...\n 30345: 8003fbb4 <ed64StartWatchdogThread+74> lui $a0,32777\n 30346: 8003fbb8 <ed64StartWatchdogThread+78> addiu $a0,$a0,-7556\n 30347: 8003fbbc <ed64StartWatchdogThread+7c> lui $a1,32777\n 30348: 8003fbc0 <ed64StartWatchdogThread+80> lw $a1,17772($a1)\n 30349: 8003fbc4 <ed64StartWatchdogThread+84> lw $a2,32($s8)\n 30350: 8003fbc8 <ed64StartWatchdogThread+88> jal 8003bb44 <ed64PrintfSync2>\n 30351  ...\n 30352: 8003fbd0 <ed64StartWatchdogThread+90> lui $v0,32777\n 30353: 8003fbd4 <ed64StartWatchdogThread+94> addiu $v0,$v0,19232\n 30354: 8003fbd8 <ed64StartWatchdogThread+98> sw $v0,16($sp)\n 30355: 8003fbdc <ed64StartWatchdogThread+9c> lui $v0,32777\n 30356: 8003fbe0 <ed64StartWatchdogThread+a0> lw $v0,17772($v0)\n 30357: 8003fbe4 <ed64StartWatchdogThread+a4> sw $v0,20($sp)\n 30358: 8003fbe8 <ed64StartWatchdogThread+a8> lui $a0,32777\n 30359: 8003fbec <ed64StartWatchdogThread+ac> addiu $a0,$a0,17776\n 30360: 8003fbf0 <ed64StartWatchdogThread+b0> li $a1,60\n 30361: 8003fbf4 <ed64StartWatchdogThread+b4> lui $a2,32772\n 30362: 8003fbf8 <ed64StartWatchdogThread+b8> addiu $a2,$a2,-1504\n 30363: 8003fbfc <ed64StartWatchdogThread+bc> move $a3,$zero\n 30364: 8003fc00 <ed64StartWatchdogThread+c0> jal 80062d50 <osCreateThread>\n 30365  ...\n 30366: 8003fc08 <ed64StartWatchdogThread+c8> lui $a0,32777\n 30367: 8003fc0c <ed64StartWatchdogThread+cc> addiu $a0,$a0,-7492\n 30368: 8003fc10 <ed64StartWatchdogThread+d0> jal 8003bb44 <ed64PrintfSync2>\n 30369  ...\n 30370: 8003fc18 <ed64StartWatchdogThread+d8> lui $a0,32777\n 30371: 8003fc1c <ed64StartWatchdogThread+dc> addiu $a0,$a0,17776\n 30372: 8003fc20 <ed64StartWatchdogThread+e0> jal 80063100 <osStartThread>\n 30373  ...\n 30374: 8003fc28 <ed64StartWatchdogThread+e8> lui $v0,32776\n 30375: 8003fc2c <ed64StartWatchdogThread+ec> lw $v0,12136($v0)\n 30376: 8003fc30 <ed64StartWatchdogThread+f0> lw $v1,0($v0)\n 30377: 8003fc34 <ed64StartWatchdogThread+f4> lui $at,32776\n 30378: 8003fc38 <ed64StartWatchdogThread+f8> sw $v1,12132($at)\n 30379: 8003fc3c <ed64StartWatchdogThread+fc> li $v0,0\n 30380: 8003fc40 <ed64StartWatchdogThread+100> lui $v1,715\n 30381: 8003fc44 <ed64StartWatchdogThread+104> ori $v1,$v1,16760\n 30382: 8003fc48 <ed64StartWatchdogThread+108> sw $v0,16($sp)\n 30383: 8003fc4c <ed64StartWatchdogThread+10c> sw $v1,20($sp)\n 30384: 8003fc50 <ed64StartWatchdogThread+110> lui $v0,32777\n 30385: 8003fc54 <ed64StartWatchdogThread+114> addiu $v0,$v0,17744\n 30386: 8003fc58 <ed64StartWatchdogThread+118> sw $v0,24($sp)\n 30387: 8003fc5c <ed64StartWatchdogThread+11c> sw $zero,28($sp)\n 30388: 8003fc60 <ed64StartWatchdogThread+120> lui $a0,32785\n 30389: 8003fc64 <ed64StartWatchdogThread+124> addiu $a0,$a0,-28216\n 30390: 8003fc68 <ed64StartWatchdogThread+128> li $a2,0\n 30391: 8003fc6c <ed64StartWatchdogThread+12c> lui $a3,3576\n 30392: 8003fc70 <ed64StartWatchdogThread+130> ori $a3,$a3,18264\n 30393: 8003fc74 <ed64StartWatchdogThread+134> jal 80063560 <osSetTimer>\n 30394  ...\n 30395: 8003fc7c <ed64StartWatchdogThread+13c> lui $v0,32776\n 30396: 8003fc80 <ed64StartWatchdogThread+140> lw $v0,12128($v0)\n 30397: 8003fc84 <ed64StartWatchdogThread+144> beqz $v0,8003fcb8 <ed64StartWatchdogThread+178>\n 30398  ...\n 30399: 8003fc8c <ed64StartWatchdogThread+14c> lui $v0,32777\n 30400: 8003fc90 <ed64StartWatchdogThread+150> lhu $v0,17792($v0)\n 30401: 8003fc94 <ed64StartWatchdogThread+154> lui $a0,32777\n 30402: 8003fc98 <ed64StartWatchdogThread+158> addiu $a0,$a0,-7428\n 30403: 8003fc9c <ed64StartWatchdogThread+15c> move $a1,$v0\n 30404: 8003fca0 <ed64StartWatchdogThread+160> jal 8003bb44 <ed64PrintfSync2>\n 30405  ...\n 30406: 8003fca8 <ed64StartWatchdogThread+168> move $a0,$zero\n 30407: 8003fcac <ed64StartWatchdogThread+16c> lw $a1,32($s8)\n 30408: 8003fcb0 <ed64StartWatchdogThread+170> jal 80062fb0 <osSetThreadPri>\n 30409  ...\n 30410: 8003fcb8 <ed64StartWatchdogThread+178> move $sp,$s8\n 30411: 8003fcbc <ed64StartWatchdogThread+17c> lw $ra,44($sp)\n 30412: 8003fcc0 <ed64StartWatchdogThread+180> lw $s8,40($sp)\n 30413: 8003fcc4 <ed64StartWatchdogThread+184> addiu $sp,$sp,48\n 30414: 8003fcc8 <ed64StartWatchdogThread+188> jr $ra\n 30415  ...\n 30416  8003fcd0 <nuBoot> addiu $sp,$sp,-32\n\n/Users/jfriend/.wine/drive_c/goose64/ed64io_watchdog.c:\n   64   * debug info\n   65   */\n   66: void ed64StartWatchdogThread(int* valToWatchInit, int intervalMS) {\n   67    int currentThreadOriginalPri = osGetThreadPri(NULL);\n   68    valToWatch = valToWatchInit;\n\n/Users/jfriend/.wine/drive_c/goose64/ed64io_watchdog.h:\n    5  #include <ultra64.h>\n    6  \n    7: void ed64StartWatchdogThread(int* valToWatch, int intervalMS);\n    8  \n    9  #endif /* _ED64IO_WATCHDOG_H */\n\n/Users/jfriend/.wine/drive_c/goose64/stage00.c:\n  225    // start a thread to watch the totalUpdates value\n  226    // if it doesn't change each second, we've crashed\n  227:   ed64StartWatchdogThread(&totalUpdates, 1000);\n  228  #endif\n  229  \n\n94 matches across 4 files\n\n\nSearching 36 files for \"ed64StartWatchdogThread\" (case sensitive)\n\n/Users/jfriend/.wine/drive_c/goose64/ed64io_watchdog.c:\n   64   * debug info\n   65   */\n   66: void ed64StartWatchdogThread(int* valToWatchInit, int intervalMS) {\n   67    int currentThreadOriginalPri = osGetThreadPri(NULL);\n   68    valToWatch = valToWatchInit;\n\n/Users/jfriend/.wine/drive_c/goose64/stage00.c:\n  225    // start a thread to watch the totalUpdates value\n  226    // if it doesn't change each second, we've crashed\n  227:   ed64StartWatchdogThread(&totalUpdates, 1000);\n  228  #endif\n  229  \n\n2 matches across 2 files\n",
			"settings":
			{
				"buffer_size": 8902,
				"line_ending": "Unix",
				"name": "Find Results",
				"scratch": true
			}
		},
		{
			"file": "ed64io_usb.h",
			"settings":
			{
				"buffer_size": 916,
				"encoding": "Western (Windows 1252)",
				"line_ending": "Unix"
			}
		},
		{
			"file": "ed64io_watchdog.c",
			"settings":
			{
				"buffer_size": 3006,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "ed64io_fault.h",
			"settings":
			{
				"buffer_size": 335,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "ed64io_fault.c",
			"settings":
			{
				"buffer_size": 28432,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "ed64io_watchdog.h",
			"settings":
			{
				"buffer_size": 174,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "stage00.c",
			"settings":
			{
				"buffer_size": 39127,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "n64compat.h",
			"settings":
			{
				"buffer_size": 402,
				"line_ending": "Unix"
			}
		},
		{
			"file": "ed64io.h",
			"settings":
			{
				"buffer_size": 204,
				"line_ending": "Unix"
			}
		},
		{
			"file": "sound.h",
			"settings":
			{
				"buffer_size": 241,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "constants.h",
			"settings":
			{
				"buffer_size": 4255,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "disassemble_modern.sh",
			"settings":
			{
				"buffer_size": 911,
				"line_ending": "Unix"
			}
		},
		{
			"file": "segments.h",
			"settings":
			{
				"buffer_size": 568,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "spec",
			"settings":
			{
				"buffer_size": 2630,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "graphic.c",
			"settings":
			{
				"buffer_size": 9094,
				"line_ending": "Windows"
			}
		},
		{
			"file": "GNUmakefile",
			"settings":
			{
				"buffer_size": 1275,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "common.makefile",
			"settings":
			{
				"buffer_size": 1741,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "Makefile",
			"settings":
			{
				"buffer_size": 1068,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "compile.bat",
			"settings":
			{
				"buffer_size": 115,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "goose64.sublime-project",
			"settings":
			{
				"buffer_size": 1568,
				"line_ending": "Unix"
			}
		},
		{
			"file": "modern.makefile",
			"settings":
			{
				"buffer_size": 1113,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "AUDIO.md",
			"settings":
			{
				"buffer_size": 1663,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "build_modern.sh",
			"settings":
			{
				"buffer_size": 211,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "trace.c",
			"settings":
			{
				"buffer_size": 904,
				"line_ending": "Unix"
			}
		},
		{
			"file": "deploy.sh",
			"settings":
			{
				"buffer_size": 1081,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "localdefs.makefile",
			"settings":
			{
				"buffer_size": 63,
				"line_ending": "Unix"
			}
		},
		{
			"file": ".gitignore",
			"settings":
			{
				"buffer_size": 1151,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "run_mupen.sh",
			"settings":
			{
				"buffer_size": 299,
				"line_ending": "Unix"
			}
		},
		{
			"file": "build_cached.sh",
			"settings":
			{
				"buffer_size": 297,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "build.sh",
			"settings":
			{
				"buffer_size": 77,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "ed64io_os_error.c",
			"settings":
			{
				"buffer_size": 9033,
				"line_ending": "Unix"
			}
		},
		{
			"file": "ed64io_os_error.h",
			"settings":
			{
				"buffer_size": 159,
				"line_ending": "Unix"
			}
		},
		{
			"file": "README.md",
			"settings":
			{
				"buffer_size": 1911,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "glgoose.cpp",
			"settings":
			{
				"buffer_size": 78195,
				"line_ending": "Unix"
			}
		},
		{
			"file": "models.c",
			"settings":
			{
				"buffer_size": 3736,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "GL Build",
	"build_system_choices":
	[
		[
			[
				[
					"Emu Build",
					""
				],
				[
					"GL Build",
					""
				],
				[
					"Packages/C++/C++ Single File.sublime-build",
					""
				],
				[
					"Packages/C++/C++ Single File.sublime-build",
					"Run"
				],
				[
					"Packages/Makefile/Make.sublime-build",
					""
				],
				[
					"Packages/Makefile/Make.sublime-build",
					"Clean"
				],
				[
					"Packages/SublimeREPL/sublimerepl_build_system_hack.sublime-build",
					""
				]
			],
			[
				"GL Build",
				""
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 271.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"projec",
				"Project: Edit"
			],
			[
				"edit ",
				"Project: Edit"
			],
			[
				"pr",
				"Project: Edit"
			],
			[
				"ren",
				"File: Rename"
			],
			[
				"reb",
				"BracketHighlighter: Remove Brackets"
			],
			[
				"del",
				"File: Delete"
			],
			[
				"rena",
				"Rename File"
			],
			[
				"make",
				"Build With: Make"
			],
			[
				"bash",
				"Set Syntax: Bourne Again Shell (bash)"
			],
			[
				"path",
				"File: Copy Path"
			],
			[
				"de",
				"File: Delete"
			],
			[
				"makefi",
				"Set Syntax: Makefile"
			],
			[
				"move",
				"File: Move"
			],
			[
				"filename",
				"File: Copy Name"
			],
			[
				"uniq",
				"Permute Lines: Unique"
			],
			[
				"github",
				"GitHubinator"
			],
			[
				"gih",
				"GitHubinator"
			],
			[
				"clos",
				"File: Close All"
			],
			[
				"save",
				"File: Save All"
			],
			[
				"came",
				"Convert Case: camelCase"
			],
			[
				"jaas",
				"Set Syntax: JavaScript (Babel)"
			],
			[
				"babel",
				"Babel Transform"
			],
			[
				"enabl",
				"Package Control: Enable Package"
			],
			[
				"pack",
				"Package Control: List Packages"
			],
			[
				"upper",
				"Convert Case: Upper Case"
			],
			[
				"setting",
				"Preferences: Settings"
			],
			[
				"c++",
				"Set Syntax: C++"
			],
			[
				"low",
				"Convert Case: Lower Case"
			],
			[
				"prefere",
				"Preferences: Settings"
			],
			[
				"form",
				"Sublack: Format file"
			],
			[
				"packin",
				"Package Control: Install Package"
			],
			[
				"sort",
				"Sort Lines"
			],
			[
				"err",
				"SublimeLinter: Goto Error"
			],
			[
				"linter",
				"SublimeLinter: Goto Error"
			],
			[
				"jav",
				"Set Syntax: JavaScript"
			],
			[
				"jasv",
				"Set Syntax: JavaScript"
			],
			[
				"got",
				"SublimeLinter: Goto Error"
			],
			[
				"Dele",
				"File: Delete"
			],
			[
				"wrap",
				"Word Wrap: Toggle"
			],
			[
				"upp",
				"Convert Case: Upper Case"
			],
			[
				"wra",
				"Word Wrap: Toggle"
			],
			[
				"sor",
				"Sort Lines"
			],
			[
				"s",
				"Sort Lines"
			],
			[
				"uni",
				"Permute Lines: Unique"
			],
			[
				"disable",
				"Package Control: Disable Package"
			],
			[
				"renam",
				"Rename File"
			],
			[
				"linterset",
				"Preferences: SublimeLinter Settings"
			],
			[
				"debug",
				"BracketHighlighter: Enable Debug Mode"
			],
			[
				"brak",
				"BracketHighlighter: Toggle Global Enable"
			],
			[
				"brakethigh",
				"BracketHighlighter: Toggle Global Enable"
			],
			[
				"match",
				"BracketHighlighter: Match Brackets (ignore threshold)"
			],
			[
				"cam",
				"Convert Case: camelCase"
			],
			[
				"scame",
				"Convert Case: camelCase"
			],
			[
				"error",
				"SublimeLinter: Goto Error"
			],
			[
				"dele",
				"File: Delete"
			],
			[
				"pyth",
				"Set Syntax: Python"
			],
			[
				"bui",
				"Build With: Emu Build"
			],
			[
				"build",
				"Build With: Emu Build"
			],
			[
				"javc",
				"Set Syntax: JavaScript"
			],
			[
				"synbash",
				"Set Syntax: Bourne Again Shell (bash)"
			],
			[
				"sync",
				"Set Syntax: C"
			],
			[
				"preferlint",
				"Preferences: SublimeLinter Settings"
			],
			[
				"pro",
				"Project: Edit"
			],
			[
				"preferelint",
				"Preferences: SublimeLinter Settings"
			],
			[
				"prefer",
				"Preferences: Settings"
			],
			[
				"Synct",
				"Set Syntax: C++"
			],
			[
				"syn++",
				"Set Syntax: C++"
			],
			[
				"goto",
				"SublimeLinter: Goto Error"
			],
			[
				"dle",
				"File: Delete"
			],
			[
				"forma",
				"Clang Format: Select Style"
			],
			[
				"clang",
				"Clang Format: Select Style"
			],
			[
				"brow",
				"Preferences: Browse Packages"
			],
			[
				"format",
				"Clang Format: Select Style"
			],
			[
				"disabl",
				"Package Control: Disable Package"
			],
			[
				"buildview",
				"Disable/Enable buildview for this window"
			],
			[
				"buildgl",
				"Build With: GL Build"
			],
			[
				"gl bu",
				"Build With: GL Build"
			],
			[
				"rean",
				"File: Rename"
			],
			[
				"sublimelint",
				"Preferences: SublimeLinter Settings"
			],
			[
				"sublimelin",
				"Preferences: SublimeLinter Settings"
			],
			[
				"syntaxc",
				"Set Syntax: C"
			],
			[
				"perma",
				"GitHubinator Permalink"
			],
			[
				"githu",
				"GitHubinator"
			],
			[
				"pac",
				"Package Control: Install Package"
			],
			[
				"pasca",
				"Convert Case: PascalCase"
			],
			[
				"cap",
				"Convert Case: PascalCase"
			],
			[
				"schem",
				"Schemr: List all schemes"
			],
			[
				"theme",
				"Themr: List themes"
			],
			[
				"scheme",
				"Schemr: List all schemes"
			],
			[
				"sche",
				"Schemr: List all schemes"
			],
			[
				"sch",
				"Schemr: List all schemes"
			],
			[
				"them",
				"Themr: List themes"
			],
			[
				"sett",
				"Preferences: Settings"
			],
			[
				"prefe",
				"Preferences: Settings"
			],
			[
				"dup",
				"File: Duplicate"
			],
			[
				"prett",
				"Preferences: JsPrettier Settings - Default"
			],
			[
				"pret",
				"Preferences: JsPrettier Settings - User"
			],
			[
				"prettier",
				"JsPrettier: Format Code"
			],
			[
				"pre",
				"Preferences: JsPrettier Settings - User"
			],
			[
				"json",
				"Set Syntax: JSON"
			],
			[
				"flow",
				"GitHub Flavored Markdown: Preview"
			],
			[
				"enable",
				"Package Control: Enable Package"
			],
			[
				"pl",
				"Package Control: List Packages"
			],
			[
				"lintthis",
				"SublimeLinter: Lint This View"
			],
			[
				"lint",
				"File: New View into File"
			],
			[
				"lintersett",
				"Preferences: SublimeLinter Settings"
			],
			[
				"linters",
				"Preferences: SublimeLinter Settings"
			],
			[
				"enablepack",
				"Package Control: Enable Package"
			],
			[
				"list linter",
				"SublimeLinter: Reload SublimeLinter and its Plugins"
			],
			[
				"sublimelintesett",
				"Preferences: SublimeLinter Settings"
			],
			[
				"sublimeLinter sett",
				"Preferences: SublimeLinter Settings"
			],
			[
				"lin",
				"SublimeLinter: Lint This View"
			],
			[
				"erro",
				"SublimeLinter: Goto Error"
			],
			[
				"go",
				"SublimeLinter: Goto Error"
			],
			[
				"unfo",
				"Code Folding: Unfold All"
			],
			[
				"unfor",
				"SublimeREPL: SBT for opened folder"
			],
			[
				"sublimlintset",
				"Preferences: SublimeLinter Settings"
			],
			[
				"pretter",
				"Preferences: JsPrettier Settings - User"
			],
			[
				"new view",
				"File: New View into File"
			],
			[
				"name",
				"File: Copy Name"
			],
			[
				"tag",
				"Tag: Remove Picked Tags in Document"
			],
			[
				"tag remove",
				"Tag: Remove Picked Tags in Document"
			],
			[
				"musta",
				"Set Syntax: HTML with mustaches"
			],
			[
				"conver",
				"Convert Case: dash-case"
			],
			[
				"reason",
				"Set Syntax: Reason"
			],
			[
				"dl",
				"File: Delete"
			],
			[
				"for",
				"Reason: Format file"
			],
			[
				"fork",
				"GitHub Flavored Markdown: Preview"
			]
		],
		"width": 496.0
	},
	"console":
	{
		"height": 340.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = '7183a2d3e96f11eeadd761d777e62404' + 'e330c659d4bb41d3bdf022e94cab3cd0'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)",
			"import urllib2,os; pf='Package Control.sublime-package'; ipp=sublime.installed_packages_path(); os.makedirs(ipp) if not os.path.exists(ipp) else None; urllib2.install_opener(urllib2.build_opener(urllib2.ProxyHandler())); open(os.path.join(ipp,pf),'wb').write(urllib2.urlopen('http://sublime.wbond.net/'+pf.replace(' ','%20')).read()); print('Please restart Sublime Text to finish installation')"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/Users/jfriend/.wine/drive_c/goose64"
	],
	"file_history":
	[
		"/Users/jfriend/.wine/drive_c/goose64/renderer.c",
		"/Users/jfriend/.wine/drive_c/goose64/goose64.sublime-project",
		"/Users/jfriend/.wine/drive_c/goose64/disassembly.txt",
		"/Users/jfriend/.wine/drive_c/goose64/sfx.h",
		"/Users/jfriend/.wine/drive_c/goose64/game.c",
		"/Users/jfriend/.wine/drive_c/goose64/constants.h",
		"/Users/jfriend/.wine/drive_c/goose64/renderer.h",
		"/Users/jfriend/.wine/drive_c/goose64/disassemble_modern.sh",
		"/Users/jfriend/.wine/drive_c/goose64/goose.out.dasm",
		"/Users/jfriend/.wine/drive_c/goose64/codesegment.o.dasm",
		"/Users/jfriend/.wine/drive_c/goose64/specminimal",
		"/Users/jfriend/.wine/drive_c/goose64/.depend",
		"/Users/jfriend/.wine/drive_c/goose64/localdefs.makefile",
		"/Users/jfriend/.wine/drive_c/goose64/stage00.c",
		"/Users/jfriend/.wine/drive_c/goose64/deploy.sh",
		"/Users/jfriend/.wine/drive_c/goose64/disassemble.sh",
		"/Users/jfriend/.wine/drive_c/goose64/Makefile",
		"/Users/jfriend/.wine/drive_c/goose64/ART.md",
		"/Users/jfriend/.wine/drive_c/goose64/mk000001.bat",
		"/Users/jfriend/.wine/drive_c/goose64/main_disasm.txt",
		"/Users/jfriend/.wine/drive_c/goose64/run_mupen.sh",
		"/Users/jfriend/.wine/drive_c/goose64/objdump.sh",
		"/Users/jfriend/.wine/drive_c/goose64/objdump.bat",
		"/Users/jfriend/.wine/drive_c/goose64/mem_heap.c",
		"/Users/jfriend/.wine/drive_c/goose64/mem_heap.h",
		"/Users/jfriend/.wine/drive_c/goose64/spec",
		"/Users/jfriend/.wine/drive_c/goose64/GNUmakefile",
		"/Users/jfriend/.wine/drive_c/goose64/compile.bat",
		"/Users/jfriend/.wine/drive_c/goose64/codesegment_disasm.txt",
		"/Users/jfriend/.wine/drive_c/goose64/sampling_profiler.c",
		"/Users/jfriend/code/m64p/build.sh",
		"/Users/jfriend/.wine/drive_c/goose64/trace.h",
		"/Users/jfriend/.wine/drive_c/goose64/trace.c",
		"/Users/jfriend/.wine/drive_c/goose64/sampling_profiler.h",
		"/Users/jfriend/.wine/drive_c/goose64/ed64io_fault.c",
		"/Users/jfriend/.wine/drive_c/goose64/codesegment_syms.txt",
		"/Users/jfriend/.wine/drive_c/goose64/build.sh",
		"/Users/jfriend/code/n64sdkmod/packages/root-compatibility-enviroment/etc/profile.d/n64-root.sh",
		"/Users/jfriend/.wine/drive_c/goose64/ed64io_usb.h",
		"/Users/jfriend/.wine/drive_c/goose64/ed64io_usb.c",
		"/Users/jfriend/.wine/drive_c/goose64/ed64io_os_error.c",
		"/Users/jfriend/.wine/drive_c/goose64/ed64io_os_error.h",
		"/Users/jfriend/.wine/drive_c/goose64/ed64io_fault.h",
		"/Users/jfriend/.wine/drive_c/moderngccdemo/libgultra_d_disasm.txt",
		"/Users/jfriend/.wine/drive_c/moderngccdemo/libgultra_disasm.txt",
		"/Users/jfriend/.wine/drive_c/goose64/graphic.c",
		"/Users/jfriend/.wine/drive_c/goose64/graphic.h",
		"/Users/jfriend/.wine/drive_c/goose64/main.c",
		"/Users/jfriend/.wine/drive_c/goose64/blender.sh",
		"/Users/jfriend/.wine/drive_c/goose64/export_animation.py",
		"/Users/jfriend/.wine/drive_c/goose64/export_character_model.py",
		"/Users/jfriend/.wine/drive_c/goose64/glgoose.cpp",
		"/Users/jfriend/.wine/drive_c/goose64/garden.blend",
		"/Users/jfriend/.wine/drive_c/goose64/garden.blend1",
		"/Users/jfriend/.wine/drive_c/goose64/glgoose",
		"/Users/jfriend/.wine/drive_c/goose64/university_bldg.h",
		"/Users/jfriend/.wine/drive_c/goose64/university_floor.h",
		"/Users/jfriend/.wine/drive_c/goose64/university_map.h",
		"/Users/jfriend/.wine/drive_c/goose64/university_map_collision.c",
		"/Users/jfriend/.wine/drive_c/goose64/university_map_collision.h",
		"/Users/jfriend/.wine/drive_c/goose64/university_map_graph.c",
		"/Users/jfriend/.wine/drive_c/goose64/university_map_graph.h",
		"/Users/jfriend/.wine/drive_c/goose64/goose64.out",
		"/Users/jfriend/.wine/drive_c/goose64/goose64glut/goose64glut.xcodeproj/project.xcworkspace/xcuserdata/jfriend.xcuserdatad/UserInterfaceState.xcuserstate",
		"/Users/jfriend/.wine/drive_c/goose64/models/Person.blend",
		"/Users/jfriend/.wine/drive_c/goose64/models/Person.blend1",
		"/Users/jfriend/.wine/drive_c/goose64/models/UniBldg.blend",
		"/Users/jfriend/.wine/drive_c/goose64/models/UniBldg.blend1",
		"/Users/jfriend/.wine/drive_c/goose64/models/UniFloor.blend",
		"/Users/jfriend/.wine/drive_c/goose64/buildcache.json",
		"/Users/jfriend/.wine/drive_c/goose64/garden_bldg.obj",
		"/Users/jfriend/.wine/drive_c/goose64/garden_floor.obj",
		"/Users/jfriend/.wine/drive_c/goose64/ground.mtl",
		"/Users/jfriend/.wine/drive_c/goose64/ground.obj",
		"/Users/jfriend/.wine/drive_c/goose64/lilypad.mtl",
		"/Users/jfriend/.wine/drive_c/goose64/lilypad.obj",
		"/Users/jfriend/.wine/drive_c/goose64/reed.mtl",
		"/Users/jfriend/.wine/drive_c/goose64/reed.obj",
		"/Users/jfriend/.wine/drive_c/goose64/rocks.mtl",
		"/Users/jfriend/.wine/drive_c/goose64/rocks.obj",
		"/Users/jfriend/.wine/drive_c/goose64/water.mtl",
		"/Users/jfriend/.wine/drive_c/goose64/water.obj",
		"/Users/jfriend/.wine/drive_c/goose64/watergrass.mtl",
		"/Users/jfriend/.wine/drive_c/goose64/watergrass.obj",
		"/Users/jfriend/.wine/drive_c/goose64/goose64glut/goose64glut.xcodeproj/project.pbxproj",
		"/Users/jfriend/.wine/drive_c/goose64/nodegraph/nodegraph.cpp",
		"/Users/jfriend/.wine/drive_c/goose64/character.c",
		"/Users/jfriend/.wine/drive_c/goose64/export_collision_mesh.py",
		"/Users/jfriend/.wine/drive_c/goose64/export_positions.py",
		"/Users/jfriend/.wine/drive_c/goose64/spatial_hash.py",
		"/Users/jfriend/.wine/drive_c/goose64/build_cached.sh",
		"/Users/jfriend/.wine/drive_c/goose64/ultratex.py",
		"/Users/jfriend/.wine/drive_c/goose64/frustum.c",
		"/Users/jfriend/.wine/drive_c/goose64/gametypes.h",
		"/Users/jfriend/.wine/drive_c/goose64/main.h",
		"/Users/jfriend/.wine/drive_c/goose64/vec3d.c",
		"/Users/jfriend/.wine/drive_c/goose64/build_modern.sh",
		"/Users/jfriend/.wine/drive_c/goose64/.gitignore",
		"/Users/jfriend/.wine/drive_c/goose64/ed64io_everdrive.h",
		"/Users/jfriend/.wine/drive_c/goose64/collision.h",
		"/Users/jfriend/.wine/drive_c/goose64/collision.c",
		"/Users/jfriend/.wine/drive_c/goose64/models.c",
		"/Users/jfriend/.wine/drive_c/goose64/characterrig.h",
		"/Users/jfriend/.wine/drive_c/goose64/get_changed_files.py",
		"/Users/jfriend/.wine/drive_c/goose64/sprites.sh",
		"/Users/jfriend/.wine/drive_c/goose64/vec2d.c",
		"/Users/jfriend/.wine/drive_c/goose64/player.c",
		"/Users/jfriend/.wine/drive_c/goose64/rotation.c",
		"/Users/jfriend/.wine/drive_c/goose64/rotation.h",
		"/Users/jfriend/.wine/drive_c/goose64/sound.h",
		"/Users/jfriend/.wine/drive_c/goose64/animation.h",
		"/Users/jfriend/.wine/drive_c/goose64/animation.c",
		"/Users/jfriend/.wine/drive_c/goose64/sprite.h",
		"/Users/jfriend/.wine/drive_c/goose64/sprite.c",
		"/Users/jfriend/.wine/drive_c/goose64/sprite_data.c",
		"/Users/jfriend/.wine/drive_c/goose64/modeltype.h",
		"/Users/jfriend/.wine/drive_c/goose64/item.h",
		"/Users/jfriend/.wine/drive_c/goose64/segments.h",
		"/Users/jfriend/.wine/drive_c/goose64/gameobject.h",
		"/Users/jfriend/.wine/drive_c/goose64/AUDIO.md",
		"/Users/jfriend/.wine/drive_c/goose64/README.md",
		"/Users/jfriend/.wine/drive_c/goose64/bush.h",
		"/Users/jfriend/.wine/drive_c/load_rom.sh",
		"/Users/jfriend/.wine/drive_c/goose64/wavefront64/wavefront64deps/util.lua",
		"/Users/jfriend/.wine/drive_c/goose64/wavefront64/wavefront64.lua",
		"/Users/jfriend/.wine/drive_c/goose64/wavefront64/wavefront64deps/bitmap.lua",
		"/Users/jfriend/.wine/drive_c/goose64/honktest1spr.h",
		"/Users/jfriend/.wine/drive_c/goose64/testspr.h"
	],
	"find":
	{
		"height": 40.0
	},
	"find_in_files":
	{
		"height": 121.0,
		"where_history":
		[
			"*.c",
			"",
			"*.c",
			"",
			"*.c",
			"*.cpp,*.hpp",
			"",
			"*.c,*.h,*.py",
			"*.c,*.h",
			"",
			"*.c,*.h",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"makeDL00",
			"ed64StartWatchdogThread",
			"WireframeRenderMode",
			"sun_light",
			"amb_light",
			"twoCycleMode",
			"drawW",
			"draw",
			"renderModeSetting",
			"dynamicp",
			"loader64",
			"ed64PrintFuncImpl",
			"retrace",
			"osSyncPrintf",
			"_PrintfImplUSBAsync",
			"_Printf",
			"__MusIntSetPitch+1bc",
			"osSyncPrintf",
			"__MusIntSetPitch+1a4",
			"ed64PrintThreads",
			"ed64PrintThreads()",
			"ed64PrintThreads",
			"clearBreakpoint",
			"breakinst",
			"breakMsg",
			"BREAK_INSTRUCTION_MASK",
			"breakinst",
			"ed64DebuggerUsbListener",
			"walkFaultedThreads",
			"ED64IO_DEBUGGER",
			"ed64PrintThreads",
			"printThreads",
			"printThr",
			"lastValToWatch",
			"ed64StartWatchdogThread",
			"ED64CODEFILES",
			"totalUpdates",
			"retrace",
			"DBGPRINT",
			"watchdogThreadPri",
			"currentThreadOriginalPri",
			"startedwatchdogproc",
			"mainThreadPri",
			"watchdog",
			"fault",
			"faultMsgQ",
			"watchdogMsgQ",
			"valToWatchNew",
			"faultThreadPri",
			"faultThreadStack",
			"faultThreadPri",
			"faultMsgQ",
			"startedwatchdogproc",
			"faultproc",
			"currentThreadOriginalPri",
			"watchdogThread",
			"watchdogThreadPri",
			"CORELIBS",
			"NUAUDIOLIB",
			"CORELIBS",
			"NUAUDIOLIB",
			"ifdef OPTIMIZE",
			"seqPlaying",
			"sndHandle",
			"SeqPl",
			"CBUTT",
			"b1n12_2",
			"Stop",
			"\")",
			"L_C",
			"nuAuStlSeqPlayerPlay",
			"nuAuStlSeq",
			"nuAuStlSeqPlayerDataSet",
			"Seq",
			"MAX_SOUND_TYPE",
			"soundCheck",
			"SOUND_TE",
			"_songSegmentRomEnd",
			"offhonks",
			"honkSoundRange",
			"soundTypeRange",
			"sndNum",
			"sndNumber",
			"maxSoundType",
			"sndNumber",
			"MAX_SOUND_TYPE",
			"MAX_SOUND_NUMBER",
			"maxSoundType",
			"MAX_SOUND_TYPE",
			" % x",
			"sndNumber",
			"0",
			"debugPrintf",
			"sndHandle",
			"sndNumber",
			"nuAuStlSndPlayerPlay",
			"sndNumber",
			"nuAuStlSndPlayerPlay",
			"nuAuStlSndPlayerSndStop",
			"nuA",
			"$(TARGETS",
			"SOUND_TEST",
			"soundCheck",
			"SOUND_TEST",
			"CONSOLE_SHOW_SOUND",
			"SOUND_TEST",
			"LOG_TR",
			"A_BUTTON",
			"twoCycleMode",
			"nuAuStlSndPlayerSetSndPitch",
			"sndPitch",
			"sndHandle",
			"nuAuStlSndPlayerPlay",
			"sndHandle",
			"soundCheck",
			"ed64PrintfSync2",
			"SFX",
			"sfx",
			"SFX",
			"SFX_START",
			"ed64PrintfSync2",
			"_modelsSegmentRomStart",
			"DEBUGSTARTUP",
			"ed64PrintfSync2",
			"DEBUGPRINT",
			" done",
			"osCreateThread",
			"traceRCP"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"GARDEN",
			"garden",
			"GARDEN",
			"garden",
			"GARDEN",
			"garden",
			"0x0000",
			"HIGH_RESOLUTION_HALF_Y",
			"torso",
			"forearm",
			"forearm.l",
			"forearm.r",
			"forearm_r",
			"forearm_l",
			"hand_r",
			"forearm",
			"origin",
			"rotation.y",
			"rotationY"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 21,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "main.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4258,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"SL.155.region_keys":
							[
								"SL.clang.Highlights.|c88ce71424da34ae6dbf600ff50fd22484eb0313abdccfffe0a29d315c098b2a|region.redish markup.error.sublime_linter|32",
								"SL.clang.Gutter.|region.redish markup.error.sublime_linter|dot",
								"SL.clang.Highlights.|b7fe07d8657b0b24b71c641401981bbb6c54f9262870aa3a45f4cab1a00d86ca|region.yellowish markup.warning.sublime_linter|32",
								"sublime_linter.protected_regions",
								"SL.clang.Highlights.|c1e18863270af06e1058bfe565db5d9cfacc9741fb819a1e50bb2259a254c146|region.yellowish markup.warning.sublime_linter|32",
								"SL.clang.Gutter.|region.yellowish markup.warning.sublime_linter|dot",
								"SL.clang.Highlights.|c14ee7ff40f214a9dd96eca823175cc4ce160b0f37cfaa9da5735186e06e2b04|region.yellowish markup.warning.sublime_linter|32"
							],
							"SL.2375.region_keys":
							[
								"sublime_linter.protected_regions",
								"SL.clang.Highlights.|4ba31fbc8fff7e1c9252b3d4b9c4baa7e2d9ba7b027711c4ccbdf439d14e5d9f|region.yellowish markup.warning.sublime_linter|32",
								"SL.clang.Highlights.|b7fe07d8657b0b24b71c641401981bbb6c54f9262870aa3a45f4cab1a00d86ca|region.yellowish markup.warning.sublime_linter|32",
								"SL.clang.Gutter.|region.yellowish markup.warning.sublime_linter|dot",
								"SL.clang.Highlights.|9fce5efc2f672add6076d11cba13515a29573f6dea59e08e8234092d469e9115|region.yellowish markup.warning.sublime_linter|32",
								"SL.clang.Highlights.|c88ce71424da34ae6dbf600ff50fd22484eb0313abdccfffe0a29d315c098b2a|region.redish markup.error.sublime_linter|32",
								"SL.clang.Highlights.|c14ee7ff40f214a9dd96eca823175cc4ce160b0f37cfaa9da5735186e06e2b04|region.yellowish markup.warning.sublime_linter|32",
								"SL.clang.Gutter.|region.redish markup.error.sublime_linter|dot"
							],
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"origin_encoding": "ASCII",
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2149.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "ed64io_usb.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7850,
						"regions":
						{
						},
						"selection":
						[
							[
								6960,
								6960
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content"
							],
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 2,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 8902,
						"regions":
						{
							"match":
							{
								"flags": 112,
								"regions":
								[
									[
										182,
										199
									],
									[
										214,
										231
									],
									[
										557,
										574
									],
									[
										859,
										876
									],
									[
										1275,
										1298
									],
									[
										1613,
										1636
									],
									[
										1776,
										1799
									],
									[
										1837,
										1860
									],
									[
										1897,
										1920
									],
									[
										1957,
										1980
									],
									[
										2015,
										2038
									],
									[
										2076,
										2099
									],
									[
										2137,
										2160
									],
									[
										2225,
										2248
									],
									[
										2286,
										2309
									],
									[
										2347,
										2370
									],
									[
										2407,
										2430
									],
									[
										2471,
										2494
									],
									[
										2528,
										2551
									],
									[
										2588,
										2611
									],
									[
										2652,
										2675
									],
									[
										2712,
										2735
									],
									[
										2776,
										2799
									],
									[
										2839,
										2862
									],
									[
										2900,
										2923
									],
									[
										2959,
										2982
									],
									[
										3047,
										3070
									],
									[
										3107,
										3130
									],
									[
										3173,
										3196
									],
									[
										3233,
										3256
									],
									[
										3299,
										3322
									],
									[
										3354,
										3377
									],
									[
										3445,
										3468
									],
									[
										3505,
										3528
									],
									[
										3571,
										3594
									],
									[
										3631,
										3654
									],
									[
										3695,
										3718
									],
									[
										3756,
										3779
									],
									[
										3845,
										3868
									],
									[
										3905,
										3928
									],
									[
										3971,
										3994
									],
									[
										4032,
										4055
									],
									[
										4092,
										4115
									],
									[
										4156,
										4179
									],
									[
										4217,
										4240
									],
									[
										4277,
										4300
									],
									[
										4343,
										4366
									],
									[
										4399,
										4422
									],
									[
										4459,
										4482
									],
									[
										4525,
										4548
									],
									[
										4586,
										4609
									],
									[
										4674,
										4697
									],
									[
										4734,
										4757
									],
									[
										4800,
										4823
									],
									[
										4889,
										4912
									],
									[
										4949,
										4972
									],
									[
										5015,
										5038
									],
									[
										5102,
										5125
									],
									[
										5162,
										5185
									],
									[
										5226,
										5249
									],
									[
										5286,
										5309
									],
									[
										5346,
										5369
									],
									[
										5410,
										5433
									],
									[
										5465,
										5488
									],
									[
										5524,
										5547
									],
									[
										5589,
										5612
									],
									[
										5651,
										5674
									],
									[
										5713,
										5736
									],
									[
										5774,
										5797
									],
									[
										5841,
										5864
									],
									[
										5903,
										5926
									],
									[
										5967,
										5990
									],
									[
										6028,
										6051
									],
									[
										6096,
										6119
									],
									[
										6152,
										6175
									],
									[
										6212,
										6235
									],
									[
										6277,
										6300
									],
									[
										6362,
										6385
									],
									[
										6423,
										6446
									],
									[
										6488,
										6511
									],
									[
										6536,
										6559
									],
									[
										6595,
										6618
									],
									[
										6656,
										6679
									],
									[
										6722,
										6745
									],
									[
										6783,
										6806
									],
									[
										6850,
										6873
									],
									[
										6910,
										6933
									],
									[
										7000,
										7023
									],
									[
										7062,
										7085
									],
									[
										7124,
										7147
									],
									[
										7213,
										7236
									],
									[
										7273,
										7296
									],
									[
										7335,
										7358
									],
									[
										7397,
										7420
									],
									[
										7461,
										7484
									],
									[
										7654,
										7677
									],
									[
										7922,
										7945
									],
									[
										8204,
										8227
									],
									[
										8468,
										8491
									],
									[
										8808,
										8831
									]
								],
								"scope": ""
							}
						},
						"selection":
						[
							[
								8824,
								8824
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
									"1":
									[
										8529,
										8530
									]
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content"
							],
							"default_dir": "/Users/jfriend/.wine/drive_c/goose64",
							"detect_indentation": false,
							"line_numbers": false,
							"output_tag": 3,
							"result_base_dir": "",
							"result_file_regex": "^([^ \t].*):$",
							"result_line_regex": "^ +([0-9]+):",
							"scroll_past_end": true,
							"syntax": "Packages/Default/Find Results.hidden-tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 3268.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "ed64io_usb.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 916,
						"regions":
						{
						},
						"selection":
						[
							[
								816,
								816
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										890,
										895
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/hash.png",
										"region.yellowish"
									]
								},
								"open":
								{
									"1":
									[
										85,
										91
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"syntax": "Packages/C++/C++.sublime-syntax",
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 18,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "ed64io_watchdog.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3006,
						"regions":
						{
						},
						"selection":
						[
							[
								1482,
								1482
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"is_xml": false,
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 17,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "ed64io_fault.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 335,
						"regions":
						{
						},
						"selection":
						[
							[
								267,
								283
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										302,
										303
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/round_bracket.png",
										"region.yellowish"
									]
								},
								"open":
								{
									"1":
									[
										283,
										284
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"syntax": "Packages/C++/C++.sublime-syntax",
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 16,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "ed64io_fault.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 28432,
						"regions":
						{
						},
						"selection":
						[
							[
								7564,
								7581
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										7943,
										7944
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/curly_bracket.png",
										"region.purplish"
									]
								},
								"open":
								{
									"1":
									[
										7560,
										7561
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 20,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "ed64io_watchdog.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 174,
						"regions":
						{
						},
						"selection":
						[
							[
								100,
								49
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										143,
										148
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/hash.png",
										"region.yellowish"
									]
								},
								"open":
								{
									"1":
									[
										2,
										8
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"is_xml": false,
							"syntax": "Packages/C++/C++.sublime-syntax",
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 15,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "stage00.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 39127,
						"regions":
						{
						},
						"selection":
						[
							[
								8028,
								8036
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										8037,
										8038
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/round_bracket.png",
										"region.yellowish"
									]
								},
								"open":
								{
									"1":
									[
										8036,
										8037
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content"
							],
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "n64compat.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 402,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"syntax": "Packages/C++/C++.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"type": "text"
				},
				{
					"buffer": 10,
					"file": "ed64io.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 204,
						"regions":
						{
						},
						"selection":
						[
							[
								204,
								204
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"syntax": "Packages/C++/C++.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 14,
					"type": "text"
				},
				{
					"buffer": 11,
					"file": "sound.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 241,
						"regions":
						{
						},
						"selection":
						[
							[
								241,
								241
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"syntax": "Packages/C++/C++.sublime-syntax",
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 25,
					"type": "text"
				},
				{
					"buffer": 12,
					"file": "constants.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4255,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										4174,
										4179
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/hash.png",
										"region.yellowish"
									]
								},
								"open":
								{
									"1":
									[
										2,
										8
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				},
				{
					"buffer": 13,
					"file": "disassemble_modern.sh",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 911,
						"regions":
						{
						},
						"selection":
						[
							[
								382,
								148
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content"
							],
							"syntax": "Packages/ShellScript/Bash.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 14,
					"file": "segments.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 568,
						"regions":
						{
						},
						"selection":
						[
							[
								525,
								543
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										546,
										551
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/hash.png",
										"region.yellowish"
									]
								},
								"open":
								{
									"1":
									[
										1,
										7
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"syntax": "Packages/C++/C++.sublime-syntax",
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 23,
					"type": "text"
				},
				{
					"buffer": 15,
					"file": "spec",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2630,
						"regions":
						{
						},
						"selection":
						[
							[
								1607,
								1607
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 22,
					"type": "text"
				},
				{
					"buffer": 16,
					"file": "graphic.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 9094,
						"regions":
						{
						},
						"selection":
						[
							[
								6095,
								6111
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										6112,
										6113
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/round_bracket.png",
										"region.yellowish"
									]
								},
								"open":
								{
									"1":
									[
										6111,
										6112
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 21,
					"type": "text"
				},
				{
					"buffer": 17,
					"file": "GNUmakefile",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1275,
						"regions":
						{
						},
						"selection":
						[
							[
								919,
								928
							]
						],
						"settings":
						{
							"SL.2382.region_keys":
							[
								"SL.shellcheck.Highlights.|51083c89e9e8d3add54f825f41f239fc619421c88269fda405e5011ec9fb1d61|region.redish markup.error.sublime_linter|32",
								"sublime_linter.protected_regions",
								"SL.shellcheck.Highlights.|bb268dffacc78c69d8f197e6e74a949fe5c0a460d814e2192eb015580c0c0725|region.yellowish markup.warning.sublime_linter|32",
								"SL.shellcheck.Gutter.|region.redish markup.error.sublime_linter|dot",
								"SL.shellcheck.Highlights.|acc98abb75ec7a13446a2dccd6fe18c75c575dd9fd36d27959bdeb3297ca3734|region.redish markup.error.sublime_linter|32"
							],
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content"
							],
							"syntax": "Packages/Makefile/Makefile.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 12,
					"type": "text"
				},
				{
					"buffer": 18,
					"file": "common.makefile",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1741,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content"
							],
							"syntax": "Packages/Makefile/Makefile.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 11,
					"type": "text"
				},
				{
					"buffer": 19,
					"file": "Makefile",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1068,
						"regions":
						{
						},
						"selection":
						[
							[
								1061,
								1061
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"syntax": "Packages/Makefile/Makefile.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 10,
					"type": "text"
				},
				{
					"buffer": 20,
					"file": "compile.bat",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 115,
						"regions":
						{
						},
						"selection":
						[
							[
								115,
								115
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content"
							],
							"syntax": "Packages/Batch File/Batch File.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"type": "text"
				},
				{
					"buffer": 21,
					"file": "goose64.sublime-project",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1568,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								1568
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										1567,
										1568
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/curly_bracket.png",
										"region.purplish"
									]
								},
								"open":
								{
									"1":
									[
										0,
										1
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"open_with_edit": true,
							"syntax": "Packages/PackageDev/Package/Sublime Text Project/Sublime Text Project.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 139.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 22,
					"file": "modern.makefile",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1113,
						"regions":
						{
						},
						"selection":
						[
							[
								720,
								720
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content"
							],
							"syntax": "Packages/Makefile/Makefile.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 28,
					"type": "text"
				},
				{
					"buffer": 23,
					"file": "AUDIO.md",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1663,
						"regions":
						{
						},
						"selection":
						[
							[
								801,
								801
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content"
							],
							"is_xml": false,
							"syntax": "Packages/Markdown/Markdown.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 27,
					"type": "text"
				},
				{
					"buffer": 24,
					"file": "build_modern.sh",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 211,
						"regions":
						{
						},
						"selection":
						[
							[
								69,
								69
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										70,
										72
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/dot.png",
										"region.yellowish brackethighlighter.default"
									]
								},
								"open":
								{
									"1":
									[
										22,
										24
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content"
							],
							"syntax": "Packages/ShellScript/Bash.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 26,
					"type": "text"
				},
				{
					"buffer": 25,
					"file": "trace.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 904,
						"regions":
						{
						},
						"selection":
						[
							[
								237,
								237
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content"
							],
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 30,
					"type": "text"
				},
				{
					"buffer": 26,
					"file": "deploy.sh",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1081,
						"regions":
						{
						},
						"selection":
						[
							[
								423,
								423
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										419,
										423
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/dot.png",
										"region.yellowish brackethighlighter.default"
									]
								},
								"open":
								{
									"1":
									[
										177,
										182
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content"
							],
							"syntax": "Packages/ShellScript/Bash.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 13,
					"type": "text"
				},
				{
					"buffer": 27,
					"file": "localdefs.makefile",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 63,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"syntax": "Packages/Makefile/Makefile.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 32,
					"type": "text"
				},
				{
					"buffer": 28,
					"file": ".gitignore",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1151,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content"
							],
							"syntax": "Packages/Git Formats/Git Ignore.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 31,
					"type": "text"
				},
				{
					"buffer": 29,
					"file": "run_mupen.sh",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 299,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"SL.2428.region_keys":
							[
							],
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/ShellScript/Bash.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 33,
					"type": "text"
				},
				{
					"buffer": 30,
					"file": "build_cached.sh",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 297,
						"regions":
						{
						},
						"selection":
						[
							[
								297,
								297
							]
						],
						"settings":
						{
							"SL.2340.region_keys":
							[
								"SL.shellcheck.Gutter.|region.yellowish markup.warning.sublime_linter|dot",
								"sublime_linter.protected_regions",
								"SL.shellcheck.Highlights.|3767870e7ba1eb97933c518f2882c882e98fcd3d215c46cc90cc1bb7b276a95b|region.yellowish markup.warning.sublime_linter|32"
							],
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"syntax": "Packages/ShellScript/Bash.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 24,
					"type": "text"
				},
				{
					"buffer": 31,
					"file": "build.sh",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 77,
						"regions":
						{
						},
						"selection":
						[
							[
								53,
								29
							]
						],
						"settings":
						{
							"SL.2342.region_keys":
							[
								"SL.shellcheck.Gutter.|region.yellowish markup.warning.sublime_linter|dot",
								"sublime_linter.protected_regions",
								"SL.shellcheck.Highlights.|fb3daeb8594a0b6fc2109a6ba6cd60526cd0c85e442846d47535c8840277815b|region.yellowish markup.warning.sublime_linter|32"
							],
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content"
							],
							"syntax": "Packages/ShellScript/Bash.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 29,
					"type": "text"
				},
				{
					"buffer": 32,
					"file": "ed64io_os_error.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 9033,
						"regions":
						{
						},
						"selection":
						[
							[
								8926,
								8926
							]
						],
						"settings":
						{
							"SL.2424.region_keys":
							[
								"SL.clang.Highlights.|4a4d5c7bfb3ba63ca022769be26f69575719e0a9db5efb8551a4ecae8e429280|region.yellowish markup.warning.sublime_linter|32",
								"SL.clang.Highlights.|703c0c779efc905f586882811a07a9e471490e68c34d76a47ebcd85937b8aab4|region.yellowish markup.warning.sublime_linter|32",
								"sublime_linter.protected_regions",
								"SL.clang.Gutter.|region.yellowish markup.warning.sublime_linter|dot"
							],
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 34,
					"type": "text"
				},
				{
					"buffer": 33,
					"file": "ed64io_os_error.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 159,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"SL.2426.region_keys":
							[
							],
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/C++/C++.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 35,
					"type": "text"
				},
				{
					"buffer": 34,
					"file": "README.md",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1911,
						"regions":
						{
						},
						"selection":
						[
							[
								1344,
								1344
							]
						],
						"settings":
						{
							"SL.2402.region_keys":
							[
							],
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content"
							],
							"is_xml": false,
							"syntax": "Packages/Markdown/Markdown.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 19,
					"type": "text"
				},
				{
					"buffer": 35,
					"file": "glgoose.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 78195,
						"regions":
						{
						},
						"selection":
						[
							[
								1900,
								1923
							]
						],
						"settings":
						{
							"SL.2445.region_keys":
							[
								"SL.clang++.Gutter.|region.redish markup.error.sublime_linter|dot",
								"SL.clang++.Highlights.|bb636a5c5404808c39a6e98c729260c6e98f80a1366e38f6ff886ed21da22830|region.redish markup.error.sublime_linter|32",
								"SL.clang++.Highlights.|1130ce3c277acde3de4c0415b11b79b197ca92a9b9baffb161f75e0a6b7adcc5|region.redish markup.error.sublime_linter|32",
								"SL.clang++.Highlights.|a8a56ccb9557fe284c283cc1d11d83b7a567f4ea22c05910932e0358b36d3be2|region.redish markup.error.sublime_linter|32",
								"SL.clang++.Highlights.|9a13cd1d690cc9b9415a60585351e55938884b282e7829eb246df3b0482d6153|region.redish markup.error.sublime_linter|32",
								"SL.clang++.Highlights.|dc145e018edc5d55f466df92fc7bce205caae7d4ec2c3503cb9ee33014740162|region.redish markup.error.sublime_linter|32",
								"sublime_linter.protected_regions",
								"SL.clang++.Highlights.|46d11f963f005d8cf987d3c6cd5facef0a1649ec8d1f78a942287d5737422bc7|region.redish markup.error.sublime_linter|32"
							],
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 36,
					"type": "text"
				},
				{
					"buffer": 36,
					"file": "models.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3736,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"SL.2350.region_keys":
							[
								"SL.clang.Highlights.|113249ac9129221c656ddbd70082abf30c74677779f4cd3ef26f1cf192d9bdc7|region.redish markup.error.sublime_linter|32",
								"SL.clang.Gutter.|region.redish markup.error.sublime_linter|dot",
								"SL.clang.Highlights.|01cb340bee55c1f067e39c67886bf419e08aba835c796a0ffac4db4b85137851|region.redish markup.error.sublime_linter|32",
								"SL.clang.Highlights.|688c220997803b2625650bea544929744b55adf3fdde68790a5bd5be8c8c7f3d|region.redish markup.error.sublime_linter|32",
								"SL.clang.Highlights.|60821f2c6463c7c54ba865c3c59ae65d8deec1a3adb6274a8fdbf42cdba59ef9|region.redish markup.error.sublime_linter|32",
								"SL.clang.Highlights.|5bff2c9c57c154e89a4b88235c97bf513eeba0e247214898863056a4444b5571|region.redish markup.error.sublime_linter|32",
								"SL.clang.Gutter.|region.yellowish markup.warning.sublime_linter|dot",
								"SL.clang.Highlights.|993d0f27c8293b3091f6f412d474682f4a32b99fc8079183b31fa48db962bc18|region.redish markup.error.sublime_linter|32",
								"SL.clang.Highlights.|4f0307490bf1432bb10472dba855fe15c4523bda091f6f7b57ba20dd59557a71|region.redish markup.error.sublime_linter|32",
								"SL.clang.Highlights.|7efa80ab6f2b2ae2978718f0438adf02265b2664d939944f7b4f01003c689b99|region.redish markup.error.sublime_linter|32",
								"SL.clang.Highlights.|be91621c62fbb7bb192d21b4f7a8934e68e5ea5ea550b47a7147a813065ae184|region.redish markup.error.sublime_linter|32",
								"SL.clang.Highlights.|8b94dba0df5fe017063cb117b74e1afb67efa6c4d6f4b2c3215f3aede2513f51|region.yellowish markup.warning.sublime_linter|32",
								"SL.clang.Highlights.|ec6e6e6b2015548cf5b370c5001cfee36056a1cc3261734f3af777011c56784d|region.redish markup.error.sublime_linter|32",
								"SL.clang.Highlights.|bb41186368bc479b1dad7dd243a59b3eccedde870efbe3774e8d08756dc3db6d|region.redish markup.error.sublime_linter|32",
								"SL.clang.Highlights.|67255d41903074e52a0011991cdf9f7bb93fe97bb2bd5b4aa3f016c6a95ea6fe|region.redish markup.error.sublime_linter|32",
								"SL.clang.Highlights.|d58f6619523534fa7f78ad7e1a52e7c6d5c3a301abb80cf2677db6991f3b16b6|region.redish markup.error.sublime_linter|32",
								"sublime_linter.protected_regions"
							],
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content"
							],
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 31.0
	},
	"input":
	{
		"height": 44.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.SublimeLinter":
	{
		"height": 0.0
	},
	"output.SublimeLinter Messages":
	{
		"height": 407.0
	},
	"output.aaa_package_dev":
	{
		"height": 116.0
	},
	"output.exec":
	{
		"height": 382.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.mdpopups":
	{
		"height": 0.0
	},
	"output.package_dev":
	{
		"height": 116.0
	},
	"output.unsaved_changes":
	{
		"height": 138.0
	},
	"pinned_build_system": "",
	"project": "goose64.sublime-project",
	"replace":
	{
		"height": 70.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"main",
				"main.c"
			],
			[
				"dis",
				"disassemble_modern.sh"
			],
			[
				"const",
				"constants.h"
			],
			[
				"n64compat",
				"n64compat.h"
			],
			[
				"stage",
				"stage00.c"
			],
			[
				"comp",
				"compile.bat"
			],
			[
				"make",
				"Makefile"
			],
			[
				"depl",
				"deploy.sh"
			],
			[
				"sta",
				"stage00.c"
			],
			[
				"ed64io",
				"ed64io.h"
			],
			[
				"stag",
				"stage00.c"
			],
			[
				"read",
				"README.md"
			],
			[
				"watchdo",
				"ed64io_watchdog.c"
			],
			[
				"watch",
				"watchdog.c"
			],
			[
				"ed6us",
				"ed64io_usb.h"
			],
			[
				"ed64usb",
				"ed64io_usb.c"
			],
			[
				"wat",
				"watchdog.c"
			],
			[
				"edfau",
				"ed64io_fault.c"
			],
			[
				"fual",
				"ed64io_fault.h"
			],
			[
				"faul",
				"ed64io_fault.c"
			],
			[
				"spec",
				"spec"
			],
			[
				"comm",
				"common.makefile"
			],
			[
				"sound",
				"sound.h"
			],
			[
				"sf",
				"sfx.h"
			],
			[
				"a",
				"AUDIO.md"
			],
			[
				"aud",
				"AUDIO.md"
			],
			[
				"buich",
				"build_cached.sh"
			],
			[
				"buildcach",
				"build_cached.sh"
			],
			[
				"mae",
				"Makefile"
			],
			[
				"build",
				"build.sh"
			],
			[
				"spe",
				"spec"
			],
			[
				".md",
				"AUDIO.md"
			],
			[
				"giti",
				".gitignore"
			],
			[
				"dasm",
				"goose.out.dasm"
			],
			[
				"",
				"common.makefile"
			],
			[
				"go",
				"goose.out.dasm"
			],
			[
				"gn",
				"GNUmakefile"
			],
			[
				"modern",
				"modern.makefile"
			],
			[
				"gnu",
				"GNUmakefile"
			],
			[
				"commo",
				"common.makefile"
			],
			[
				"goose.outd",
				"goose.out.dasm"
			],
			[
				"disass",
				"disassemble_modern.sh"
			],
			[
				"ed64fa",
				"ed64io_fault.c"
			],
			[
				"buildmo",
				"build_modern.sh"
			],
			[
				"buildcac",
				"build_cached.sh"
			],
			[
				"mainc",
				"main.c"
			],
			[
				"buildca",
				"build_cached.sh"
			],
			[
				"buch",
				"build_cached.sh"
			],
			[
				"render",
				"renderer.h"
			],
			[
				"gnuma",
				"GNUmakefile"
			],
			[
				"moden",
				"disassemble_modern.sh"
			],
			[
				"disa",
				"disassemble_modern.sh"
			],
			[
				"cons",
				"constants.h"
			],
			[
				"depen",
				".depend"
			],
			[
				"depe",
				".depend"
			],
			[
				"consta",
				"constants.h"
			],
			[
				"buidmo",
				"build_modern.sh"
			],
			[
				"rende",
				"renderer.c"
			],
			[
				"gamec",
				"game.c"
			],
			[
				"constants.h",
				"constants.h"
			],
			[
				"ream",
				"README.md"
			],
			[
				"buimod",
				"build_modern.sh"
			],
			[
				"mak",
				"common.makefile"
			],
			[
				"lo",
				"localdefs"
			],
			[
				"gl",
				"glgoose.cpp"
			],
			[
				"art",
				"ART.md"
			],
			[
				"rea",
				"README.md"
			],
			[
				"ma",
				"Makefile"
			],
			[
				"runm",
				"run_mupen.sh"
			],
			[
				"maek",
				"Makefile"
			],
			[
				"edos",
				"ed64io_os_error.h"
			],
			[
				"bui",
				"build.sh"
			],
			[
				"buca",
				"build_cached.sh"
			],
			[
				"build_ca",
				"build_cached.sh"
			],
			[
				"GN",
				"GNUmakefile"
			],
			[
				"compile.bat",
				"compile.bat"
			],
			[
				"codes",
				"codesegment_disasm.txt"
			],
			[
				"objdump.bat",
				"objdump.bat"
			],
			[
				"co",
				"codesegment_disasm.txt"
			],
			[
				"obj",
				"objdump.sh"
			],
			[
				"disas",
				"disassembly.txt"
			],
			[
				"mode",
				"models.c"
			],
			[
				"buil",
				"build.sh"
			],
			[
				"run",
				"run_mupen.sh"
			],
			[
				"makef",
				"Makefile"
			],
			[
				"sp",
				"spec"
			],
			[
				"mem",
				"mem_heap.h"
			],
			[
				"maindis",
				"main_disasm.txt"
			],
			[
				"edfaul",
				"ed64io_fault.c"
			],
			[
				"trace",
				"trace.h"
			],
			[
				"profi",
				"profiler.c"
			],
			[
				"usb",
				"ed64io_usb.h"
			],
			[
				"edusb",
				"ed64io_usb.c"
			],
			[
				"edus",
				"ed64io_usb.c"
			],
			[
				"graph",
				"graphic.c"
			],
			[
				"blen",
				"blender.sh"
			],
			[
				"expoan",
				"export_animation.py"
			],
			[
				"expocha",
				"export_character_model.py"
			],
			[
				"ren",
				"renderer.h"
			],
			[
				"buid",
				"build.sh"
			],
			[
				"ed64fau",
				"ed64io_fault.h"
			],
			[
				"build mo",
				"build_modern.sh"
			],
			[
				"buildmod",
				"build_modern.sh"
			],
			[
				"frus",
				"frustum.c"
			],
			[
				"ultra",
				"ultratex.py"
			],
			[
				"stage00",
				"stage00.c"
			],
			[
				"stag0",
				"stage00.c"
			],
			[
				"eve",
				"ed64io_everdrive.h"
			],
			[
				"everdh",
				"ed64io_everdrive.h"
			],
			[
				"rendere",
				"renderer.c"
			],
			[
				"trach",
				"trace.h"
			],
			[
				"grap",
				"graphic.c"
			],
			[
				"renh",
				"renderer.h"
			],
			[
				"readme",
				"README.md"
			],
			[
				"bush",
				"bush.h"
			],
			[
				"univeco",
				"university_map_collision.c"
			],
			[
				"coll",
				"collision.c"
			],
			[
				"glc",
				"glgoose.cpp"
			],
			[
				"git",
				".gitignore"
			],
			[
				"grpah",
				"graphic.c"
			],
			[
				"soun",
				"sound.h"
			],
			[
				"mainh",
				"main.h"
			],
			[
				"get",
				"get_changed_files.py"
			],
			[
				"honktest",
				"honktest1spr.h"
			],
			[
				"test",
				"testspr.h"
			],
			[
				"wave",
				"wavefront64/wavefront64.lua"
			],
			[
				"honk3",
				"honk3spr.h"
			],
			[
				"honk2",
				"honk2spr.h"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"~/code/posts/posts.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 34.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"Renderer_calcIntersecting",
				"Renderer_calcIntersecting"
			],
			[
				"Time",
				"CUR_TIME_MS"
			],
			[
				"ed64StartWatchdogThread",
				"ed64StartWatchdogThread"
			],
			[
				"ed64PrintFuncImpl",
				"ed64PrintFuncImpl"
			],
			[
				"Soundty",
				"SoundType"
			],
			[
				"rand",
				"RAND"
			],
			[
				"RAND",
				"RAND"
			],
			[
				"SONG",
				"SONG_END"
			],
			[
				"gfxInit",
				"gfxInit"
			],
			[
				"debug",
				"DEBUGPRINT"
			],
			[
				"Trace_addEvent",
				"Trace_addEvent"
			],
			[
				"tracead",
				"Trace_addEvent"
			],
			[
				"trace",
				"Trace_start"
			],
			[
				"initStage00",
				"initStage00"
			],
			[
				"game",
				"Game_init"
			],
			[
				"ed64RegisterOSErrorHandler",
				"ed64RegisterOSErrorHandler"
			],
			[
				"ed64PrintStackTrace",
				"ed64PrintStackTrace"
			],
			[
				"EXTERN_SEGMENT_WITH_BSS",
				"EXTERN_SEGMENT_WITH_BSS"
			],
			[
				"PerfLogger_logChunk",
				"PerfLogger_logChunk"
			],
			[
				"SamplingProfiler_startThread",
				"SamplingProfiler_startThread"
			],
			[
				"Trace_clear",
				"Trace_clear"
			],
			[
				"regDesc_t",
				"regDesc_t"
			],
			[
				"inva",
				"invariant"
			],
			[
				"ED64IO_FAULT_STACKSIZE",
				"ED64IO_FAULT_STACKSIZE"
			],
			[
				"SCREEN_HT",
				"SCREEN_HT"
			],
			[
				"assert",
				"ed64Assert"
			],
			[
				"invar",
				"invariant"
			],
			[
				"characini",
				"Character_init"
			],
			[
				"char",
				"Character"
			],
			[
				"upda",
				"updateGame00"
			],
			[
				"Renderer_sortVisibleObjects",
				"Renderer_sortVisibleObjects"
			],
			[
				"Renderer_isCloser",
				"Renderer_isCloserBySeparatingPlane"
			],
			[
				"Renderer_getSeparatingPlane",
				"Renderer_getSeparatingPlane"
			],
			[
				"update",
				"updateGame00"
			],
			[
				"Plane_distance",
				"Plane_distance"
			],
			[
				"render",
				"Renderer_cullVisibility"
			],
			[
				"rendere",
				"Renderer_cullVisibility"
			],
			[
				"ed64",
				"ed64PrintfSync2"
			],
			[
				"ed64SendFaultMessage",
				"ed64SendFaultMessage"
			],
			[
				"Renderer_isBackgroundGameObject",
				"Renderer_isBackgroundGameObject"
			],
			[
				"gfxClearCfb",
				"gfxClearCfb"
			],
			[
				"invariant",
				"invariant"
			],
			[
				"isback",
				"Renderer_isBackgroundGameObject"
			],
			[
				"Renderer_isZBufferedGameObject",
				"Renderer_isZBufferedGameObject"
			],
			[
				"renderer",
				"Renderer_cullVisibility"
			],
			[
				"RendererSortDistance",
				"RendererSortDistance"
			],
			[
				"Vec3d_directionTo",
				"Vec3d_directionTo"
			],
			[
				"MEM_HEAP_SIZE",
				"MEM_HEAP_SIZE"
			],
			[
				"gameob",
				"GameObject"
			],
			[
				"zbu",
				"Renderer_isZBufferedGameObject"
			],
			[
				"aabb",
				"AABB_fromSphere"
			],
			[
				"AABB",
				"AABB"
			],
			[
				"getModelDisplayList",
				"getModelDisplayList"
			],
			[
				"G_RM_AA_ZUPD_OPA_SURF",
				"G_RM_AA_ZUPD_OPA_SURF"
			],
			[
				"updateGame00",
				"updateGame00"
			],
			[
				"main",
				"main"
			],
			[
				"MIN",
				"MIN"
			],
			[
				"camera",
				"Game_updateCamera"
			],
			[
				"Rand",
				"RAND"
			],
			[
				"Game_getObjCenter",
				"Game_getObjCenter"
			],
			[
				"padBinaryLeft",
				"padBinaryLeft"
			],
			[
				"draww",
				"drawWorldObjects"
			],
			[
				"drawW",
				"drawWorldObjects"
			],
			[
				"Sprite_frameCycle",
				"Sprite_frameCycle"
			],
			[
				"fram",
				"Sprite_frameCycle"
			],
			[
				"Matr",
				"Matrix4"
			],
			[
				"Matrix",
				"Matrix4"
			],
			[
				"player",
				"Player_move"
			],
			[
				"E",
				"Euler"
			],
			[
				"animSta",
				"AnimationState"
			],
			[
				"Dynamic",
				"Dynamic"
			],
			[
				"gameo",
				"GameObject"
			],
			[
				"Gameob",
				"GameObject_init"
			],
			[
				"Renderer_cullVisibility",
				"Renderer_cullVisibility"
			],
			[
				"updagame",
				"updateGame00"
			],
			[
				"stage0",
				"stage00"
			],
			[
				"makeDL00",
				"makeDL00"
			],
			[
				"Game_update",
				"Game_update"
			],
			[
				"chracini",
				"Character_init"
			],
			[
				"getmo",
				"getMeshForModelType"
			],
			[
				"logtr",
				"logTraceChunk"
			],
			[
				"renderso",
				"Renderer_sortVisibleObjects"
			],
			[
				"loadBMP_custom",
				"loadBMP_custom"
			],
			[
				"update00",
				"updateGame00"
			],
			[
				"make",
				"makeDL00"
			],
			[
				"rendererc",
				"Renderer_cullVisibility"
			],
			[
				"ma",
				"makeDL00"
			],
			[
				"maked",
				"makeDL00"
			],
			[
				"HIGH_RESOLUTION",
				"HIGH_RESOLUTION"
			],
			[
				"makedl",
				"makeDL00"
			],
			[
				"getCen",
				"GetCenter"
			],
			[
				"model",
				"ModelProperties"
			],
			[
				"physb",
				"PhysBody"
			],
			[
				"ImGuiInputTextFlags",
				"ImGuiInputTextFlags_"
			],
			[
				"inputFlo",
				"InputFloat"
			],
			[
				"phys",
				"PhysBody"
			],
			[
				"Gameo",
				"GameObject"
			],
			[
				"InputF",
				"InputFloat3"
			],
			[
				"ImGuiInputTextFlags_",
				"ImGuiInputTextFlags_"
			],
			[
				"InputFloat3",
				"InputFloat3"
			],
			[
				"inputflo",
				"InputFloat3"
			],
			[
				"inputfl",
				"InputFloat"
			],
			[
				"InputFloat",
				"InputFloat"
			],
			[
				"GameObj",
				"GameObject"
			],
			[
				"EulerDe",
				"EulerDegrees"
			],
			[
				"FLT_EPSILON",
				"FLT_EPSILON"
			],
			[
				"rayinter",
				"Game_rayIntersectsSphere"
			],
			[
				"gameray",
				"Game_rayIntersectsSphere"
			],
			[
				"Vec3d",
				"VEC3D_H"
			],
			[
				"vec3d",
				"Vec3d"
			],
			[
				"Game_getIntersectingObject",
				"Game_getIntersectingObject"
			],
			[
				"RaycastTraceEvent",
				"RaycastTraceEvent"
			],
			[
				"Game_traceRaycast",
				"Game_traceRaycast"
			],
			[
				"Game_rayIntersectsSphere",
				"Game_rayIntersectsSphere"
			],
			[
				"vec3ddir",
				"Vec3d_directionTo"
			],
			[
				"Vec3d_init",
				"Vec3d_init"
			],
			[
				"cahraccanse",
				"Character_canSeeItem"
			],
			[
				"intersec",
				"Game_rayIntersectsSphere"
			],
			[
				"ImGui_ImplGLUT_InstallFuncs",
				"ImGui_ImplGLUT_InstallFuncs"
			],
			[
				"AnimatioFra",
				"AnimationFrame_lerp"
			],
			[
				"AnimationFrame_lerp",
				"AnimationFrame_lerp"
			],
			[
				"characmove",
				"Character_moveTowards"
			],
			[
				"Character_moveTowards",
				"Character_moveTowards"
			],
			[
				"charac",
				"Character"
			],
			[
				"gameupdate",
				"Game_update"
			],
			[
				"AnimationState_init",
				"AnimationState_init"
			],
			[
				"MAX_ANIM_MESH_PARTS",
				"MAX_ANIM_MESH_PARTS"
			],
			[
				"Anim",
				"AnimationFrame"
			]
		],
		"width": 600.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": false,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 342.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
